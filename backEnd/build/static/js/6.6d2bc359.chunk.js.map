{"version":3,"sources":["Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/Nav/NavElements/Nav.js","Containers/Navigation/NavHeader.js","Components/Nav/NavForBigDevices/NavForBigDevices.js","Components/Home/Header/Header.css","Components/Home/Header/Slogan/Slogan.css","Components/Nav/NavElements/Nav.css","Components/Nav/NavForBigDevices/NavForBigDevices.css","Components/Nav/NavForSmallDevices/NavForSmallDevices.css","Components/UI/Modal/Modal.css","Components/UI/Backdrop/Backdrop.css","Components/Nav/DrawerToggle/DrawerToggle.css","Components/Home/Header/Slogan/Slogan.js","Components/Nav/DrawerToggle/DrawerToggle.js","Components/Nav/NavForSmallDevices/NavForSmallDevices.js","Components/Home/Header/Header.js","Containers/Activate/Activate.js","Components/Activation/Activation.js"],"names":["Backdrop_Backdrop","backdrop","props","react_default","a","createElement","className","classes","Backdrop","onClick","React","modal","Fragment","show","clicked","modalClosed","Modal","style","transform","opacity","children","prevProps","nextProps","Nav_NavElements_Nav","Nav","_ref","navHeaderArr","onClickHandler","appLanguage","company","Company","el","key","text","fn","withRouter","connect","mapStateToProps","state","navHeader","navHeaderSigned","navHeaderOwner","language","demoData","token","_csrf","mapDispatchToProps","dispatch","onDemo","data","actions","onLogout","NavHeader","_useContext","useContext","app_context","choiceLang","setShowLogIn","setShowRegister","showRegister","setShowOwner","showOwner","val","onLoginHandler","onDemoHandler","email","password","pass","console","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Containers_Navigation_NavHeader__WEBPACK_IMPORTED_MODULE_1__","_NavForBigDevices_css__WEBPACK_IMPORTED_MODULE_2__","_NavForBigDevices_css__WEBPACK_IMPORTED_MODULE_2___default","__webpack_exports__","NavForBigDevices","module","exports","Header","Slogan","Active","NavForSmallDevices","DrowerContainer","DrawerToggle","headerSlogan","DrawerToggle_DrawerToggle","drawerToggle","Nav_NavForSmallDevices_NavForSmallDevices","showLogIn","_useState","useState","_useState2","Object","slicedToArray","showNav","setShowNav","showNavHandler","react","Header_Slogan_Slogan","error","loading","errorText","serverResErrors","registerText","registerForm","isActivated","autoInitLang","checkParameter","activParam","clearError","Activate","objectWithoutProperties","id","window","message","showModal","setShowModal","useEffect","Spinner","closeModal","Activation","Containers_Activate_Activate"],"mappings":"kJAQAA,EAJMC,SAAWC,GAAA,OACbA,OAAaC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAhBC,SAAkCC,QAASP,EAAxDA,UADa,MCgBFQ,aAhBTC,SAAQT,GAEV,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAADQ,SAAA,KACIT,EAAAC,EAAAC,cAAAL,EAAA,CAAUa,KAAMX,EAAhBW,KAA4BC,QAASZ,EADzCa,cAEIZ,EAAAC,EAAAC,cAAA,OACIC,UAAWC,IADfS,MAEIC,MAAO,CACHC,UAAWhB,uBADR,qBAEHiB,QAASjB,WAJjB,MAMSA,EATjBkB,YAc6B,SAAAC,EAAAC,GAAA,OAA0BA,SAAmBD,EAAnBC,MAAqCA,aAAuBD,EAAtFD,2GCLjCG,EAZMC,SAAMC,GAAA,IAAEC,EAAFD,EAAAC,aAAgBC,EAAhBF,EAAAE,eAAgCC,EAAhCH,EAAAG,YAA6CC,EAA7CJ,EAAAI,QAAA,OACR1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAhBiB,KACIrB,EAAAC,EAAAC,cAAA,UACKwB,EAAU1B,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAfuB,SAAHD,GADZ,KAEKH,EAAeA,MAAiB,SAAAK,GAAE,OAAI5B,EAAAC,EAAAC,cAAA,MACvC2B,IAAKD,EADkCE,KAEvCxB,QAASmB,IAAgBG,OAAhBH,cAAwC,kBAAMD,EAAeI,EAArBG,KAFV,KAGvC5B,UAAWsB,IAAgBG,OAAhBH,cAAwCrB,IAAxCqB,OAH4B,MAItCG,EAJkCE,QAJnC,eCiGGE,gBAAYC,YAlBrBC,SAAkBC,GACpB,MAAO,CACHC,UAAWD,oBADRC,UAEHC,gBAAiBF,oBAFdE,gBAGHC,eAAgBH,oBAHbG,eAIHb,YAAaU,WAJVI,SAKHC,SAAUL,oBALPK,SAMHC,MAAON,cANJM,MAOHC,MAAOP,WAPJO,MAQHhB,QAASS,cARbT,UAWEiB,SAAqBC,GACvB,MAAO,CACHC,OAAQ,SAAAC,GAAA,OAAUF,EAASG,cAAnBD,KACRE,SAAU,kBAAMJ,EAASG,mBAGNd,CA7FrBgB,SAAYlD,GAAS,IAAAmD,EAQLC,qBARKC,EAAA,GAGnBC,EAHmBH,EAAAG,WAInBC,EAJmBJ,EAAAI,aAKnBC,EALmBL,EAAAK,gBAMnBC,EANmBN,EAAAM,aAOnBC,EAPmBP,EAAAO,aAQnBC,EARmBR,EAAAQ,UAUnBnC,EAAexB,EAAnBqC,UAEGrC,EAAH0C,QACIlB,EAAexB,EAAfwB,iBAEDxB,SAAH2D,IACInC,EAAexB,EAAfwB,gBAoDJ,OAAOvB,EAAAC,EAAAC,cAAAkB,EAAA,CACCI,eAtBFA,SAAiBsB,GACpB,OAAAA,GACI,qBA9BgBa,GA+BhBC,EA9BAJ,GAAHE,GACAJ,KA6ByB,MACtB,sBA1BHC,MA2B0B,MACvB,kBACAF,QAAiB,MACjB,kBACAA,QAAiB,MACjB,kBA7BHI,MA8BiB,MACd,iBA5BHA,MA6BgB,MACb,sBA3BHA,MACA1D,aA2BqB,MAClB,qBAzBD8D,WACF,IAAMf,EAAO,CACTgB,MAAO/D,WADE+D,MAETC,SAAUhE,WAFDiE,KAGTtB,MAAO3C,EAHX2C,OAKA3C,YAoBG8D,GAAgB,MAChB,QAASI,YAjBb,WA7BGL,IAAiBD,GAmDfpC,aAFDA,EAGCE,YAAa1B,EAHd0B,YAICC,QAAS3B,EAJjB2B,+CC3EJ,IAAAwC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAAE,EAAAE,GASAE,EAAA,EALMC,WAAmB,OACrBN,EAAAnE,EAAAC,cAAA,OAAKC,UAAWC,IAAhBsE,kBACIN,EAAAnE,EAAAC,cAAAoE,EAAA,EAFiB,6BCHzBK,EAAAC,QAAA,CAAkBC,OAAA,8CCAlBF,EAAAC,QAAA,CAAkBE,OAAA,8CCAlBH,EAAAC,QAAA,CAAkBvD,IAAA,kBAAAM,QAAA,sBAAAoD,OAAA,2CCAlBJ,EAAAC,QAAA,CAAkBF,iBAAA,kECAlBC,EAAAC,QAAA,CAAkBI,mBAAA,sECAlBL,EAAAC,QAAA,CAAkB/D,MAAA,4CCAlB8D,EAAAC,QAAA,CAAkBvE,SAAA,kDCAlBsE,EAAAC,QAAA,CAAkBK,gBAAA,uCAAAC,aAAA,uICaHjD,cALTC,SAAkBC,GACpB,MAAO,CACHgD,aAAchD,oBADlBgD,eAIWlD,CAVT6C,SAASxD,GAAA,IAAE6D,EAAF7D,EAAA6D,aAAA,OACXnF,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAApB0E,QACI9E,EAAAC,EAAAC,cAAA,UAFOiF,qFCQfC,EATMC,SAAetF,GAAA,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAhB6E,iBACIjF,EAAAC,EAAAC,cAAA,OAAKI,QAAUP,EAAfY,QAA8BR,UAAaC,IAA3C8E,cACIlF,EAAAC,EAAAC,cAAA,MADJ,MAEIF,EAAAC,EAAAC,cAAA,MAFJ,MAGIF,EAAAC,EAAAC,cAAA,MALS,SCyBrBoF,EArBMN,WAA2B,IAAA9B,EACKC,qBADLC,EAAA,GACtBI,EADsBN,EAAAM,aACR+B,EADQrC,EAAAqC,UAAAC,EAECC,oBAFD,GAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEtBK,EAFsBH,EAAA,GAEbI,EAFaJ,EAAA,GAGvBK,aACFD,OAQJ,OANAH,OAAAK,EAAA,UAAAL,CAAU,YACHnC,GAAH+B,IACIQ,KAGL,CAAAvC,EALH+B,IAOIvF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAhB4E,oBACIhF,EAAAC,EAAAC,cAAAkF,EAAA,CAAczE,QADlBoF,IAEI/F,EAAAC,EAAAC,cAAAW,EAAA,GAAOH,KAAMmF,QAAbN,EAAqD3E,YAArDmF,GACI/F,EAAAC,EAAAC,cAAA+C,EAAA,EAJZ,SCLJwB,EAAA,EARMI,WAAS,OACX7E,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAnByE,QACI7E,EAAAC,EAAAC,cAAA+F,EADJ,MAEIjG,EAAAC,EAAAC,cAAAwE,EAAA,EAFJ,MAGI1E,EAAAC,EAAAC,cAAAoF,EAJO,sICqEAtD,cAAYC,YAhBrBC,SAAkBC,GACpB,MAAO,CACH+D,MAAO/D,aADJ+D,MAEHC,QAAShE,aAFNgE,QAGHC,UAAWjE,oBAHRkE,gBAIHC,aAAcnE,oBAJXoE,aAKHC,YAAarE,aALjBqE,cAQE7D,SAAqBC,GACvB,MAAO,CACH6D,aAAc,kBAAM7D,EAASG,mBAC7B2D,eAAgB,SAAAC,GAAA,OAAgB/D,EAASG,kBAAzB4D,KAChBC,WAAY,kBAAMhE,EAASG,2BAGRd,CApErB4E,SAAWvF,GAAEoF,MAAkDpF,EAAlDoF,eAAgBR,EAAkC5E,EAAlC4E,MAAOM,EAA2BlF,EAA3BkF,YAAgBzG,EAAW4F,OAAAmB,EAAA,EAAAnB,CAAArE,EAAA,0CAC3DqF,EAAa,CACfI,GAAIC,2BAA2BA,sCADnC,IADiExB,EAI/BC,mBAAS,CAAC/E,MAAD,EAAcuG,QAJQ,OAAAvB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI1D0B,EAJ0DxB,EAAA,GAI/CyB,EAJ+CzB,EAAA,GAMjEC,OAAAK,EAAA,UAAAL,CAAU,WACN5F,iBACA2G,MAFJ,IAMAU,oBAAU,WACHlB,GAASnG,EAAZqG,UACQe,EAAa,CACbzG,MADa,EAEbuG,QAASlH,YAAgBmG,EAAhBnG,aAFToH,IAMLX,SAAuBzG,EAA1BuG,eACIrC,eACAkD,EAAa,CACTzG,MADS,EAETuG,QAASlH,eAFboH,oBAMN,CAAAjB,EAhBFkB,IAuBA,OACIpH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACKV,UAAgBC,EAAAC,EAAAC,cAAAmH,EAAA,EAAhBtH,MADL,KAEIC,EAAAC,EAAAC,cAAAW,EAAA,GAAOH,KAAMwG,EAAbxG,MACIV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,SAAIgH,EADRD,SAEIjH,EAAAC,EAAAC,cAAA,UACAI,QAZVgH,WACFvH,eACAoH,EAAa,CAACzG,MAAD,EAAcuG,QAA3BE,OACApH,qBAUYI,UAFA,4BAGCJ,eAAqBA,eAArBA,OATjB,YChCJ0E,EAAA,QANM8C,SAAaxH,GAAA,OACfC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA2E,EAAA,EADJ,MAEI7E,EAAAC,EAAAC,cAAAsH,EAHW","file":"static/js/6.6d2bc359.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport classes from './Modal.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props => {\n\n    return (\n        <React.Fragment>\n            <Backdrop show={props.show} clicked={props.modalClosed} />\n            <div\n                className={classes.Modal}\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                    {props.children}\n                </div>\n        </React.Fragment>\n    );\n};\nexport default React.memo(modal, (prevProps, nextProps) => nextProps.show === prevProps.show && nextProps.children === prevProps.children);","import React from 'react';\r\nimport classes from './Nav.css';\r\n\r\nconst Nav = ({navHeaderArr, onClickHandler, appLanguage, company}) => (\r\n    <nav className={classes.Nav}>        \r\n        <ul>\r\n            {company ? <li className={classes.Company}>{company}</li> : null} \r\n            {navHeaderArr ? navHeaderArr.map(el => <li\r\n            key={el.text}\r\n            onClick={appLanguage !== el.text.toLowerCase() ? () => onClickHandler(el.fn): null}\r\n            className={appLanguage === el.text.toLowerCase() ? classes.Active : null}>\r\n            {el.text}</li>) : null}\r\n        </ul>            \r\n    </nav>\r\n);\r\nexport default Nav;","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter} from 'react-router-dom'\r\nimport AppContext from '../../context/app-context';\r\nimport Nav from '../../Components/Nav/NavElements/Nav';\r\nimport * as actions from '../../store/actions/index'; \r\n\r\nconst NavHeader = props => {\r\n    \r\n    const {\r\n        choiceLang,\r\n        setShowLogIn,\r\n        setShowRegister,\r\n        showRegister,\r\n        setShowOwner,\r\n        showOwner } = useContext(AppContext);\r\n\r\n    let navHeaderArr = props.navHeader;\r\n    \r\n    if(props.token) {\r\n        navHeaderArr = props.navHeaderSigned\r\n    };\r\n    if(props.token && showOwner) {\r\n        navHeaderArr = props.navHeaderOwner\r\n    }\r\n\r\n    const onLoginHandler = val => {\r\n        if(showRegister || showOwner ) return\r\n        setShowLogIn(val)\r\n    };\r\n    const onSignInHandler = val => {\r\n        // if(showRegister) return        \r\n        setShowRegister(!showRegister);\r\n    };\r\n    const toSytemPage = () => {\r\n        setShowOwner(true);\r\n    };\r\n    const toHomePage = () => {\r\n        setShowOwner(false);\r\n    }\r\n    const onLogoutHandler = () => {\r\n        setShowOwner(false);\r\n        props.onLogout();\r\n    }\r\n\r\n    const onDemoHandler = () => {\r\n        const data = {\r\n            email: props.demoData.email,\r\n            password: props.demoData.pass,\r\n            _csrf: props._csrf\r\n        };\r\n        props.onDemo(data);\r\n    }\r\n    \r\n    const onClickHandler = data => {\r\n       switch(data) {\r\n           case('onLoginHandler'):\r\n           onLoginHandler(true); break\r\n           case('onSignInHandler'):\r\n           onSignInHandler(true); break;\r\n           case('onSetLangPl'):\r\n           choiceLang('pl');break\r\n           case('onSetLangEs'):\r\n           choiceLang('es');break\r\n           case('toSytemPage'):\r\n           toSytemPage();break\r\n           case('toHomePage'):\r\n           toHomePage();break\r\n           case('onLogoutHandler'):\r\n           onLogoutHandler();break\r\n           case('onDemoHandler'):\r\n           onDemoHandler();break\r\n           default: console.log(\"default\");\r\n       };\r\n    };\r\n    return <Nav\r\n            onClickHandler={onClickHandler}\r\n            navHeaderArr={navHeaderArr}\r\n            appLanguage={props.appLanguage}\r\n            company={props.company}\r\n        /> \r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navHeader: state.initLang.textHome.navHeader,\r\n        navHeaderSigned: state.initLang.textHome.navHeaderSigned,\r\n        navHeaderOwner: state.initLang.textHome.navHeaderOwner,\r\n        appLanguage: state.initLang.language,\r\n        demoData: state.initLang.textHome.demoData,\r\n        token: state.authReducer.token,\r\n        _csrf: state.initLang._csrf,\r\n        company: state.authReducer.company\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDemo: (data) => dispatch(actions.authProcess(data)),\r\n        onLogout: () => dispatch(actions.logoutUser())\r\n    }\r\n};\r\nexport default withRouter( connect(mapStateToProps, mapDispatchToProps)(NavHeader) );","import React from 'react';\r\nimport Nav from '../../../Containers/Navigation/NavHeader';\r\nimport classes from './NavForBigDevices.css';\r\n\r\nconst NavForBigDevices = () => (\r\n    <div className={classes.NavForBigDevices}>\r\n        <Nav />\r\n    </div>    \r\n);\r\nexport default NavForBigDevices;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__3aN7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slogan\":\"Slogan__Slogan__xcvpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav__Nav__1mRS5\",\"Company\":\"Nav__Company__24Xj9\",\"Active\":\"Nav__Active__2_UBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavForBigDevices\":\"NavForBigDevices__NavForBigDevices__U1s_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavForSmallDevices\":\"NavForSmallDevices__NavForSmallDevices__3SbK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__1nRg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__3t-VJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrowerContainer\":\"DrawerToggle__DrowerContainer__TOIK0\",\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1mC6i\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './Slogan.css';\r\n\r\nconst Slogan = ({headerSlogan}) => (\r\n    <section className={classes.Slogan}>\r\n        <h1>{headerSlogan}</h1>\r\n    </section>\r\n);\r\nconst mapStateToProps = state => {\r\n    return {\r\n        headerSlogan: state.initLang.textHome.headerSlogan\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Slogan);","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrowerContainer}>\r\n        <div onClick= {props.clicked} className = {classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>    \r\n);\r\nexport default drawerToggle;","import React, {useState, useContext, useEffect} from 'react';\r\nimport AppContext from '../../../context/app-context';\r\nimport Nav from '../../../Containers/Navigation/NavHeader';\r\nimport classes from './NavForSmallDevices.css';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport DrowerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst NavForSmallDevices = () => {\r\n    const {showRegister, showLogIn} = useContext(AppContext);\r\n    const [showNav, setShowNav] = useState(false);\r\n    const showNavHandler = () => {\r\n        setShowNav(!showNav);\r\n    };\r\n    useEffect(()=> {\r\n        if(showRegister || showLogIn) {\r\n            showNavHandler();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [showRegister, showLogIn])  \r\n    return(\r\n        <div className={classes.NavForSmallDevices}>\r\n            <DrowerToggle clicked={showNavHandler}/>\r\n            <Modal show={showNav && !showRegister && !showLogIn} modalClosed={showNavHandler}>\r\n                <Nav />\r\n            </Modal>\r\n        </div> \r\n    );\r\n};\r\nexport default NavForSmallDevices;","import React from 'react';\r\nimport classes from './Header.css';\r\nimport Slogan from './Slogan/Slogan';\r\nimport NavBig from '../../Nav/NavForBigDevices/NavForBigDevices';\r\nimport NavSmall from '../../Nav/NavForSmallDevices/NavForSmallDevices';\r\n\r\nconst Header = () => (\r\n    <header className={classes.Header}>            \r\n        <Slogan />\r\n        <NavBig />\r\n        <NavSmall />\r\n    </header>\r\n    \r\n);\r\nexport default Header;","import React , {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Activate = ({checkParameter, error, isActivated, ...props}) => {\r\n    const activParam = {\r\n        id: window.location.href.slice(window.location.href.lastIndexOf(\"/\") + 1)\r\n    };\r\n    const [showModal, setShowModal] = useState({show: false, message: null})\r\n\r\n    useEffect(() => {\r\n        props.autoInitLang();\r\n        checkParameter(activParam);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(error && props.errorText) {\r\n                setShowModal({\r\n                show: true,\r\n                message: props.errorText[error.toString()] || error\r\n            });\r\n            return\r\n        };\r\n        if(isActivated === 200 && props.registerText) {\r\n            console.log(isActivated)\r\n            setShowModal({\r\n                show: true,\r\n                message: props.registerText.activateSuccess\r\n            });\r\n        };\r\n        // eslint-disable-next-line\r\n    },[error, isActivated]);\r\n\r\n    const closeModal = () => {\r\n        props.clearError();\r\n        setShowModal({show: false, message: null});\r\n        props.history.push('/');    \r\n    }\r\n    return (\r\n        <>\r\n            {props.loading ? <Spinner /> : null}\r\n            <Modal show={showModal.show} >\r\n                <>\r\n                    <p>{showModal.message}</p>\r\n                    <button \r\n                    onClick={closeModal}\r\n                    className='btn btn-secondary btn-sm'>\r\n                    {props.registerText ? props.registerText.cancel : null}\r\n                    </button>\r\n                </>\r\n            </Modal>            \r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.regReducer.error,\r\n        loading: state.regReducer.loading,\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        registerText: state.initLang.textHome.registerForm,\r\n        isActivated: state.regReducer.isActivated\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        autoInitLang: () => dispatch(actions.autoInitLang()),\r\n        checkParameter: (activParam) => dispatch(actions.activateProcess(activParam)),\r\n        clearError: () => dispatch(actions.registerClearError())\r\n    };\r\n};\r\nexport default withRouter( connect(mapStateToProps, mapDispatchToProps)(Activate) );","import React from 'react';\r\nimport Header from '../../Components/Home/Header/Header';\r\nimport Activate from '../../Containers/Activate/Activate';\r\n\r\nconst Activation = (props) => (\r\n    <>\r\n        <Header />\r\n        <Activate />\r\n    </>\r\n);\r\nexport default Activation;"],"sourceRoot":""}