{"version":3,"sources":["context/menu-context.js","Components/Owner/Inside/Drivers/Drivers.css","Components/Owner/Inside/Trucks/Trucks.css","Containers/Owner/Drivers/driverModel.js","Components/Owner/Menu/Menu.css","assets/img/instructionPhone.jpg","Components/Owner/OwnerLayout/OwnerLayout.css","Components/Owner/Menu/MenuContent/MenuContent.js","Components/Owner/Menu/Menu.js","Components/UI/Charts/ApexChart.js","Containers/Owner/Charts/DriversCharts/FuelChart.js","Components/Owner/Inside/Drivers/DriversFuel.js","Containers/Owner/Charts/DriversCharts/EfficiencyChart.js","Components/Owner/Inside/Drivers/DriversEfficiency.js","Containers/Owner/Charts/DriversCharts/OneDriverChart.js","Components/Owner/Inside/Drivers/DriverOne.js","Containers/Owner/Charts/TrucksCharts/FuelChart.js","Components/Owner/Inside/Trucks/TrucksFuel.js","Containers/Owner/Charts/TrucksCharts/EfficiencyChart.js","Components/Owner/Inside/Trucks/TrucksEfficiency.js","Containers/Owner/Charts/TrucksCharts/OneTruckChart.js","Components/Owner/Inside/Trucks/TruckOne.js","Containers/Owner/RoutesTableData/RoutesTableData.js","Components/Owner/Inside/RoutesTable/RoutesTable.js","Components/Owner/Inside/Inside.js","Components/Owner/Instructions/DriverInstruction.js","Containers/Owner/Drivers/AddDriver.js","Containers/Owner/Trucks/truckModel.js","Containers/Owner/Trucks/AddTruck.js","Containers/Owner/Trucks/EditTruck.js","Containers/Owner/Workers/workerModel.js","Containers/Owner/Workers/AddWorker.js","Containers/Owner/Workers/EditWorker.js","Containers/Owner/Company/EditCompany.js","Containers/Owner/Company/Payments.js","Components/Owner/Instructions/PhoneInstruction.js","Components/Owner/OwnerLayout/OwnerLayout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","menuContext","n","React","showAddDriver","setShowAddDriver","showEditDriver","setShowEditDriver","showAddTruck","setShowAddTruck","showEditTruck","setShowEditTruck","showEditCompny","setShowEditCompany","showPayments","setShowPayments","showOrders","setShowOrders","showInvoices","setShowInvoices","showPhoneInstruction","setShowPhoneInstruction","__webpack_exports__","module","exports","Fuel","FuelChart","Driver","_ref","id","newData","Object","D_Project_Tir_40_react_40_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","driverData","_Driver","D_Project_Tir_40_react_40_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","success","showInstruction","error","isLoading","axios","res","e","getDrivers","data","Menu","p","Container","SubMenu","connect","mapStateToProps","state","textMenu","userMenu","MenuContent","props","_useState","useState","_useState2","slicedToArray","collapsed","setCollapsed","_useContext","useContext","menu_context","setShowAddWorker","setShowEditWorker","react_default","a","createElement","className","es_button","type","onClick","style","marginBottom","icon","menu","defaultSelectedKeys","mode","theme","inlineCollapsed","Item","cursor","menuName","title","drivers","addDriver","editDriver","trucks","addTruck","editTruck","theft","workers","addWorker","editWorker","company","editCompany","payments","orders","invoices","instructions","href","systemInstructionLink","target","systemInstruction","driverInstruction","Owner_Menu_Menu","classes","Menu_MenuContent_MenuContent","ApexChart","width","react_apexcharts_min_default","options","series","height","Component","chartText","driverCharts","noData","setNoData","_useState3","_useState4","loading","setLoading","_useState5","chart","plotOptions","bar","horizontal","yaxis","labels","maxWidth","dataLabels","enabled","offsetX","fontSize","colors","xaxis","min","trim","axisTicks","show","borderType","color","offsetY","categories","palette","name","chartTooltipFuel","_useState6","chartData","setChartData","react","getData","dateFrom","dateEnd","from","end","urlData","encodeURI","concat","length","newCat","driverName","newSeries","updatedSeries","objectSpread","updatedOptions","spin","tip","RangePicker","DatePicker","Panel","Collapse","DriversFuel","moment","onDateChange","dates","dateStrings","_this","setState","prevState","Date","getTime","collapse","defaultActiveKey","expandIconPosition","header","titleFuel","extra","event","console","marginRight","dateChoice","locale","language","es_ES_default","pl_PL_default","allowClear","defaultValue","ranges","defineProperty","thisMonth","lastMonth","onChange","DriversCharts_FuelChart","descriptionFuel","DriversFuel_DriversFuel","truckCharts","EfficencyChart","formatter","val","chartTooltipEfficiency","DriversEfficiency","DriversEfficiency_Panel","titleEfficiency","DriversEfficiency_RangePicker","EfficiencyChart","descriptionEfficiency","DriversEfficiency_DriversEfficiency","Option","Select","oneDriverChart","OneDriverChart","legend","stroke","curve","tooltip","x","format","mediaReal","mediaRoute","allActiveDrivers","charts_context","_useState7","_useState8","activeDriversArr","setActiveDriversArr","_useState9","_useState10","activeDriver","setActiveDriver","getDriver","driverId","elem","newSeries_0","mediaRealArr","newSeries_1","mediaRouteArr","driver","_id","useEffect","Fragment","textAlign","selectDriver","es_select","DriverOne","DriverOne_Panel","DriversCharts_OneDriverChart","description","DriverOne_DriverOne","TrucksFuel","TrucksFuel_Panel","TrucksFuel_RangePicker","TrucksCharts_FuelChart","TrucksFuel_TrucksFuel","TruksEfficiency","TrucksEfficiency_Panel","TrucksEfficiency_RangePicker","TrucksCharts_EfficiencyChart","TrucksEfficiency_TruksEfficiency","oneTruckChart","OneTruckChart","allActiveTrucks","activeTrucksArr","setActiveTrucksArr","activeTruck","setActiveTruck","getTruck","truckId","truck","OneTruckChart_Option","selectTruck","TruckOne","TruckOne_Panel","TrucksCharts_OneTruckChart","TruckOne_TruckOne","text","routes","mapDispatchToProps","dispatch","actions","RoutesTableData","setTruckId","setFrom","setEnd","RoutesTableData_Option","margin","changeTruckHandler","RoutesTableData_RangePicker","disabled","changeDatesHandler","fromPicker","endPicker","truckRoutes","RouteTable","setData","componentRef","useRef","routesSorted","prev","next","route","dtStop","toLocaleDateString","checkAction","full","tonIn","tonOut","litres","comments","unloading","fuel","periodEnd","driversChange","columns","date","dataIndex","action","country","zip","count","ref","table","dataSource","bordered","size","pagination","display","justifyContent","Owner_RoutesTableData_RoutesTableData","lib_default","trigger","content","current","footer","titleText","inside","Inside","overflowY","divider","driversTitle","Drivers_DriversFuel","Drivers_DriversEfficiency","Drivers_DriverOne","trucksTitle","Trucks_TrucksFuel","TrucksEfficiency","Trucks_TruckOne","routesTitle","RoutesTable","instrText","PhoneInstruction","modal","visible","onCancel","onClose","lastName","dangerouslySetInnerHTML","__html","instruction","errorText","serverResErrors","driversText","driversForm","demo","AddDriver","elementType","elementConfig","placeholder","validation","required","minLength","maxLength","valid","touched","document","controls","setControls","setIsLoading","successMsg","setSuccesMsg","errorMsg","setErrorMsg","formIsValid","setFormIsValid","_useState11","_useState12","setShowInstruction","formElementsArray","formElementsKeyArray","config","validFormHandler","changeInputsFormText","cancelHandler","cancelForm","form","formElement","Input","label","invalid","shouldValidate","changed","inputChangedHandler","addPanelName","onSubmit","submitHandler","driverModel","DriverInstruction","drawer","placement","closable","addDriverError","Spinner","Truck","classCallCheck","truckData","_Truck","createClass","getTrucks","trucksText","trucksForm","AddTruck","consum","norm","step","changeInputsLabelText","truckModel_Truck","Number","paid","addTruckSuccess","addTruckError","confirm","Modal","EditTruck","allTrucks","setAllTrucks","EditTruck_Option","Axios","Truck.name","Truck.consum","Truck.norm","clearSelect","setTimeout","editPanelName","choiceTruck","setTruck","actualTruck","copyControls","_","deleteHandler","deleteConfirm","onOk","editTruckSuccess","noTrucks","Worker","dataSet","workerData","getWorkers","registerText","registerForm","workerText","workerForm","perm","AddWorker","email","isEmail","email2","password","password2","showAddWorker","notIdentity","setNotIdentity","workerModel_Worker","worker","restrictionText","addPanelDescripton","checkIdentityHandler","checkIdentity","addWorkerSuccess","addWorkerError","EditWorker","password3","showEditWorker","allWorkers","setAllWorkers","workerCurrentEmail","setWorkerCurrentEmail","_useState13","_useState14","EditWorker_Option","choiceWorker","setWorker","actualWorker","editWorkerSuccess","noWorkers","cText","companyEdit","onLogout","EditCompany","nip","street","city","post","showEditCompany","setShowOwner","app_context","getCompany","panelName","editCompanySuccess","payText","companyPayment","Payments","toCheck","setToCheck","totalBasket","setTotalBasket","deadLine","registration","render","paidTo","textColor","buy4M","buy8M","buy12M","basket","currency","tempToCheck","es_switch","checked","switchHandler","copy","checkTotal","total","infoHeader","padding","info","pageSize","vat","vatRate","toFixed","gross","acceptPayment","payHandler","phoneInstruction","Cookies","_gcn","p1","window","p3","p4","p5","src","instructionPhone_default","alt","p6","p7","EditDriver","then","bind","token","demoText","OwnerLayout","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","showDemoModal","setShowDemoModal","Provider","setAddDriver","setEditDriver","setAddTruck","setEditTruck","setAddWorker","setEditWorker","setEditCompany","setPayments","setPhoneInstruction","NavForBigDevices","Owner_Inside_Inside","zIndex","cancelButtonProps","Drivers_AddDriver","demoModal","Trucks_AddTruck","Trucks_EditTruck","Workers_AddWorker","Workers_EditWorker","Company_EditCompany","Company_Payments","Instructions_PhoneInstruction"],"mappings":"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","file":"static/js/6.2ef95ff5.chunk.js","sourcesContent":["import React from 'react';\r\nconst menuContext = React.createContext({\r\n    showAddDriver: false,\r\n    setShowAddDriver: () => {},\r\n    showEditDriver: false,\r\n    setShowEditDriver: () => {},\r\n    showAddTruck: false,\r\n    setShowAddTruck: () => {},\r\n    showEditTruck: false,\r\n    setShowEditTruck: () => {},\r\n    showEditCompny: false,\r\n    setShowEditCompany: () => {},\r\n    showPayments: false,\r\n    setShowPayments: () => {},\r\n    showOrders: false,\r\n    setShowOrders: () => {},\r\n    showInvoices: false,\r\n    setShowInvoices: () => {},\r\n    showPhoneInstruction: false,\r\n    setShowPhoneInstruction: () => {}\r\n});\r\nexport default menuContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fuel\":\"Drivers__Fuel__qZWNH\",\"FuelChart\":\"Drivers__FuelChart__2YQVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fuel\":\"Trucks__Fuel__3g5Yq\",\"FuelChart\":\"Trucks__FuelChart__21O_j\"};","import axios from 'axios';\r\nexport class Driver {\r\n    constructor({ id, Driver, newData }) {\r\n        this.driverData = {\r\n            id,\r\n            Driver,\r\n            newData\r\n        }\r\n    };    \r\n    addDriver(success, showInstruction, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('/system/addDriver', this.driverData)\r\n            .then(res => { success(res.data); showInstruction(true); isLoading(false); })\r\n            .catch(e => { error(e.response.data); isLoading(false) });\r\n    };\r\n    updateDriver(success, error, isLoading, getDrivers) {\r\n        isLoading(true);\r\n        axios.put('/system/update', this.driverData)\r\n            .then(res => { success(res.data); isLoading(false); getDrivers() })\r\n            .catch(e => { error(e.response.data); isLoading(false) });\r\n    };\r\n    deleteDriver(success, error, isLoading, getDrivers) {\r\n        isLoading(true);\r\n        axios.delete('/system/update', {data: this.driverData} )\r\n            .then(res => { success(res.data); isLoading(false); getDrivers() })\r\n            .catch(e => { error(e.response.data); isLoading(false) });\r\n    };\r\n}; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu__Menu__1fp1Z\"};","module.exports = __webpack_public_path__ + \"static/media/instructionPhone.182d3c7a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"OwnerLayout__Container__360Bb\"};","import React, { useState, useContext } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Icon, Button } from 'antd';\r\nimport MenuContext from '../../../../context/menu-context';\r\nconst { SubMenu } = Menu;\r\n\r\nconst MenuContent = props => {\r\n\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\tconst {\r\n\t\tsetShowAddDriver,\r\n\t\tsetShowEditDriver,\t\t\r\n\t\tsetShowAddTruck,\r\n\t\tsetShowEditTruck,\r\n\t\tsetShowAddWorker,\r\n\t\tsetShowEditWorker,\r\n\t\tsetShowEditCompany,\r\n\t\tsetShowPayments,\r\n\t\tsetShowPhoneInstruction\r\n\t} = useContext(MenuContext);\r\n\t\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<Button type=\"primary\" onClick={() => setCollapsed(!collapsed)} style={{ marginBottom: 20 }}>\r\n\t\t\t\t<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tdefaultSelectedKeys={['1']}\r\n\t\t\t\t// defaultOpenKeys={['sub1']}\r\n\t\t\t\tmode=\"vertical\"\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t\tinlineCollapsed={collapsed}\r\n\t\t\t>\r\n\t\t\t\t<Menu.Item key=\"1\" style={{ cursor: \"none\" }}>\r\n\t\t\t\t\t<Icon type=\"menu\" />\r\n\t\t\t\t\t<span>{props.textMenu.menuName}</span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"drivers\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"user-add\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.drivers}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddDriver(true)} key=\"2\">{props.textMenu.addDriver}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditDriver(true)} key=\"3\">{props.textMenu.editDriver}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"trucks\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"dashboard\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.trucks}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddTruck(true)} key=\"4\">{props.textMenu.addTruck}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditTruck(true)} key=\"5\">{props.textMenu.editTruck}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => {}} key=\"6\">{props.textMenu.theft}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"workers\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"usergroup-add\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.workers}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddWorker(true)} key=\"7\">{props.textMenu.addWorker}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditWorker(true)} key=\"8\">{props.textMenu.editWorker}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"company\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"tool\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.company}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditCompany(true)} key=\"9\">{props.textMenu.editCompany}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowPayments(true)} key=\"10\">{props.textMenu.payments}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => {} } key=\"11\">{props.textMenu.orders}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => {}} key=\"12\">{props.textMenu.invoices}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"instructions\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"info-circle\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.instructions}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\t\t\t\t\t\r\n\t\t\t\t\t<Menu.Item onClick={() => {} } key=\"13\">\r\n\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\thref={props.textMenu.systemInstructionLink}\r\n\t\t\t\t\t\t\ttarget='_blanc'>{props.textMenu.systemInstruction}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowPhoneInstruction(true)} key=\"14\">{props.textMenu.driverInstruction}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n}\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttextMenu: state.initLang.textOwner.userMenu\t\t\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(MenuContent)","import React from 'react';\r\nimport classes from './Menu.css';\r\nimport MenuContent from './MenuContent/MenuContent';\r\n\r\nconst Menu = () => (\r\n    <div className={classes.Menu}>\r\n        <MenuContent />\r\n    </div>\r\n);\r\nexport default Menu","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartRender extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\" style={{ width: \"98%\" }}>\r\n                        <Chart\r\n                            options={this.props.options}\r\n                            series={this.props.series}\r\n                            type={this.props.type}\r\n                            height={this.props.height}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartRender;","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst FuelChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Driver-Fuel-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                offsetX: 300,\r\n                style: {\r\n                    fontSize: '12px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {\r\n                min:20,\r\n                labels: {\r\n                    trim: false,\r\n                    axisTicks: {\r\n                        show: true,\r\n                        borderType: 'solid',\r\n                        color: '#78909C',\r\n                        height: 6,\r\n                        offsetX: 0,\r\n                        offsetY: 0\r\n                    }\r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },        \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipFuel,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = (from, end) => {\r\n        const urlData = encodeURI(\r\n            `from=${from}&end=${end}&param=mediaReal`);\r\n        setLoading(true);\r\n        axios.get(`/system/driversFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data.driverName\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.driverCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FuelChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Icon, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport FuelChart from '../../../../Containers/Owner/Charts/DriversCharts/FuelChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\n// const callback = (key) => {\r\n//   console.log(key);\r\n// }\r\nconst genExtra = () => (\r\n\t<Icon\r\n\t\ttype=\"setting\"\r\n\t\tonClick={event => {\r\n\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tconsole.log('extra')\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nclass DriversFuel extends React.Component {\r\n\r\n\tstate = {\r\n\t\tdateFrom: moment().startOf('month').subtract(1, 'month'),\r\n\t\tdateEnd: moment()\r\n\t};\r\n\t\r\n\tonDateChange = (dates, dateStrings) => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\tdateFrom: new Date(dateStrings[0]).getTime(),\r\n\t\t\t\tdateEnd: new Date(dateStrings[1]).getTime()\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\t// onChange={callback}\r\n\t\t\t\t\texpandIconPosition=\"right\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Panel header={this.props.chartText.titleFuel} key=\"1\" extra={genExtra()}>\r\n\t\t\t\t\t\t<span style={{ marginRight: 10 }}>{this.props.chartText.dateChoice}</span>\r\n\t\t\t\t\t\t<RangePicker\r\n\t\t\t\t\t\t\tlocale={this.props.language === 'es' ? locale_es : locale_pl}\r\n\t\t\t\t\t\t\tallowClear={false}\r\n\t\t\t\t\t\t\tdefaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n\t\t\t\t\t\t\tmoment()]}\r\n\t\t\t\t\t\t\tranges={{\r\n\t\t\t\t\t\t\t\t[this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n\t\t\t\t\t\t\t\t[this.props.chartText.lastMonth]:\r\n\t\t\t\t\t\t\t\t\t[moment().startOf('month').subtract(1, 'month'),\r\n\t\t\t\t\t\t\t\t\tmoment().startOf('month').subtract(1, 'day')]\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChange={this.onDateChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<FuelChart\r\n\t\t\t\t\t\t\t\tdateFrom={new Date(this.state.dateFrom).getTime()}\r\n\t\t\t\t\t\t\t\tdateEnd={new Date(this.state.dateEnd).getTime()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.descriptionFuel}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.driverCharts,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(DriversFuel);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst EfficencyChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Driver-Efficency-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {                \r\n                labels: {\r\n                    maxWidth: 360                  \r\n                }\r\n            },            \r\n            xaxis: {\r\n                labels: {\r\n                    \"formatter\": function (val) {\r\n                        return val.toFixed(2)\r\n                    },\r\n                    trim: false                    \r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        }, \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipEfficiency,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=ratio`);\r\n        setLoading(true);\r\n        axios.get(`/system/driversFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data.driverName\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.truckCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(EfficencyChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Icon, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport EfficiencyChart from '../../../../Containers/Owner/Charts/DriversCharts/EfficiencyChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\n// const callback = (key) => {\r\n//   console.log(key);\r\n// }\r\nconst genExtra = () => (\r\n  <Icon\r\n    type=\"setting\"\r\n    onClick={event => {\r\n      // If you don't want click extra trigger collapse, you can prevent this:\r\n      event.stopPropagation();\r\n      console.log('extra')      \r\n    }}\r\n  />\r\n);\r\n\r\nclass DriversEfficiency extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  }\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  }  \r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleEfficiency} key=\"1\" extra={genExtra()}>\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <EfficiencyChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionEfficiency}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.driverCharts,\r\n    language: state.initLang.language\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DriversEfficiency);","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport ChartsContext from '../../../../context/charts-context';\r\nconst { Option } = Select;\r\n\r\nconst OneDriverChart = props => {\r\n\r\n\tconst [chartData, setChartData] = useState(\r\n\t\t{\r\n\t\t\toptions: {\r\n\t\t\t\tdataLabels: {\r\n\t\t\t\t\tenabled: false\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\toffsetY: -10\r\n\t\t\t\t},\r\n\t\t\t\tstroke: {\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\tcolors: ['red', 'blue'],\r\n\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\ttype: 'datetime',\r\n\t\t\t\t\tcategories: [],\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\tformat: 'dd/MM/yy'\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tname: props.chartText.mediaReal,\r\n\t\t\t\tdata: []\r\n\t\t\t}, {\r\n\t\t\t\tname: props.chartText.mediaRoute,\r\n\t\t\t\tdata: []\r\n\t\t\t}],\t\t\t\r\n\t\t\tloading: false,\r\n\t\t\tnoData: true\r\n\t\t}\r\n\t);\r\n\r\n\tconst { allActiveDrivers } = useContext(ChartsContext);\r\n\tconst [noData, setNoData] = useState(true);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [activeDriversArr, setActiveDriversArr] = useState([]);\r\n\tconst [activeDriver, setActiveDriver] = useState(null)\r\n\r\n\tconst getDriver = (driverId) => {\r\n\t\tsetLoading(true);\r\n\t\taxios.get('/system/oneDriverData?driverId=' + driverId)\r\n\t\t\t.then((res) => {\t\t\t\t\r\n\t\t\t\tif (!res.data) {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetNoData(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t\tconst newCat = res.data.datesArr.map(elem => moment(elem).format('YYYY-MM-DD'));\r\n\t\t\t\tconst newSeries_0 = res.data.mediaRealArr;\r\n\t\t\t\tconst newSeries_1 = res.data.mediaRouteArr;\r\n\t\t\t\tconst updatedSeries = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t\tconst updatedOptions = {\r\n\t\t\t\t\t...chartData.options,\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t...chartData.options.xaxis,\r\n\t\t\t\t\t\tcategories: newCat\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedChartData = {\r\n\t\t\t\t\toptions: updatedOptions,\r\n\t\t\t\t\tseries: updatedSeries\r\n\t\t\t\t};\r\n\t\t\t\tsetChartData(updatedChartData);\r\n\t\t\t\tsetActiveDriver(res.data._id)\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(false);\r\n\t\t\t})\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allActiveDrivers.length) {\r\n\t\t\tsetActiveDriversArr(allActiveDrivers.map(driver => {\r\n\t\t\t\treturn (<Option\r\n\t\t\t\t\tvalue={driver._id}\r\n\t\t\t\t\tkey={driver._id}>\r\n\t\t\t\t\t{driver.driverName}\r\n\t\t\t\t</Option>)\r\n\t\t\t}));\r\n\t\t\tgetDriver(allActiveDrivers[0]._id)\r\n\t\t}\r\n\t\telse { setLoading(false); setNoData(true) }\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst updatedSeries = [\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaReal\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaRoute\r\n\t\t\t}\r\n\t\t];\r\n\t\tsetChartData({\r\n\t\t\toptions: chartData.options,\r\n\t\t\tseries: updatedSeries\r\n\t\t})\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.chartText])\r\n\r\n\treturn (\r\n\t\tloading ? <Spin tip=\"Loading...\"></Spin> :\r\n\t\tnoData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n\t\t<>\r\n\t\t\t<div style={{ textAlign: 'left' }}>\r\n\t\t\t\t<span style={{ marginRight: 30 }}>{props.chartText.selectDriver}</span>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={activeDriver}\r\n\t\t\t\t\tstyle={{ width: 280 }}\r\n\t\t\t\t\tonChange={(value) => getDriver(value)}>\r\n\t\t\t\t\t{activeDriversArr}\r\n\t\t\t\t</Select>\r\n\t\t\t</div>\r\n\t\t\t<ApexChart\r\n\t\t\t\toptions={chartData.options}\r\n\t\t\t\tseries={chartData.series}\r\n\t\t\t\ttype=\"area\"\r\n\t\t\t\theight=\"300\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneDriverChart\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(OneDriverChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse } from 'antd';\r\nimport OneDriverChart from '../../../../Containers/Owner/Charts/DriversCharts/OneDriverChart';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass DriverOne extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\texpandIconPosition=\"right\">\r\n\t\t\t\t\t<Panel header={this.props.chartText.title} key=\"1\">\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<OneDriverChart />\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneDriverChart,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(DriverOne);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst FuelChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Trucks-Fuel-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                offsetX: 300,\r\n                style: {\r\n                    fontSize: '12px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {\r\n                min:20,\r\n                labels: {\r\n                    trim: false,\r\n                    axisTicks: {\r\n                        show: true,\r\n                        borderType: 'solid',\r\n                        color: '#78909C',\r\n                        height: 6,\r\n                        offsetX: 0,\r\n                        offsetY: 0\r\n                    }\r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },        \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipFuel,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=mediaReal`);\r\n        setLoading(true);\r\n        axios.get(`/system/trucksFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data._id\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.truckCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FuelChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport FuelChart from '../../../../Containers/Owner/Charts/TrucksCharts/FuelChart';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass TrucksFuel extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  };\r\n\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleFuel} key=\"1\">\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <FuelChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionFuel}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.truckCharts,\r\n    language: state.initLang.language\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(TrucksFuel);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst EfficencyChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Trucks-Efficency-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {                \r\n                labels: {\r\n                    maxWidth: 360                  \r\n                }\r\n            },            \r\n            xaxis: {\r\n                labels: {\r\n                    \"formatter\": function (val) {\r\n                        return val.toFixed(2)\r\n                    },\r\n                    trim: false                    \r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        }, \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipEfficiency,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=ratio`);\r\n        setLoading(true);\r\n        axios.get(`/system/trucksFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data._id\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n    };\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.driverCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(EfficencyChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport EfficiencyChart from '../../../../Containers/Owner/Charts/TrucksCharts/EfficiencyChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass TruksEfficiency extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  };\r\n\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleEfficiency} key=\"1\">\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <EfficiencyChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionEfficiency}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.truckCharts,\r\n    language: state.initLang.language\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(TruksEfficiency);","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport ChartsContext from '../../../../context/charts-context';\r\nconst { Option } = Select;\r\n\r\nconst OneTruckChart = props => {\r\n\r\n\tconst [chartData, setChartData] = useState(\r\n\t\t{\r\n\t\t\toptions: {\r\n\t\t\t\tdataLabels: {\r\n\t\t\t\t\tenabled: false\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\toffsetY: -10\r\n\t\t\t\t},\r\n\t\t\t\tstroke: {\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\tcolors: ['red', 'blue'],\r\n\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\ttype: 'datetime',\r\n\t\t\t\t\tcategories: [],\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\tformat: 'dd/MM/yy'\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tname: props.chartText.mediaReal,\r\n\t\t\t\tdata: []\r\n\t\t\t}, {\r\n\t\t\t\tname: props.chartText.mediaRoute,\r\n\t\t\t\tdata: []\r\n\t\t\t}],\t\t\t\r\n\t\t\tloading: false,\r\n\t\t\tnoData: true\r\n\t\t}\r\n\t);\r\n\r\n\tconst { allActiveTrucks } = useContext(ChartsContext);\r\n\tconst [noData, setNoData] = useState(true);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [activeTrucksArr, setActiveTrucksArr] = useState([]);\r\n\tconst [activeTruck, setActiveTruck] = useState(null);\r\n\r\n\tconst getTruck = (truckId) => {\r\n\t\tsetLoading(true);\r\n\t\taxios.get('/system/oneTruckData?truckId=' + truckId)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res.data) {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetNoData(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t\tconst newCat = res.data.datesArr.map(elem => moment(elem).format('YYYY-MM-DD'));\r\n\t\t\t\tconst newSeries_0 = res.data.mediaRealArr;\r\n\t\t\t\tconst newSeries_1 = res.data.mediaRouteArr;\r\n\t\t\t\tconst updatedSeries = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t\tconst updatedOptions = {\r\n\t\t\t\t\t...chartData.options,\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t...chartData.options.xaxis,\r\n\t\t\t\t\t\tcategories: newCat\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedChartData = {\r\n\t\t\t\t\toptions: updatedOptions,\r\n\t\t\t\t\tseries: updatedSeries\r\n\t\t\t\t};\r\n\t\t\t\tsetChartData(updatedChartData);\r\n\t\t\t\tsetActiveTruck(res.data._id)\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(false);\r\n\t\t\t})\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allActiveTrucks.length) {\r\n\t\t\tsetActiveTrucksArr(allActiveTrucks.map(truck => {\r\n\t\t\t\treturn (<Option\r\n\t\t\t\t\tvalue={truck._id}\r\n\t\t\t\t\tkey={truck._id}>\r\n\t\t\t\t\t{truck._id}\r\n\t\t\t\t</Option>)\r\n\t\t\t}));\r\n\t\t\tgetTruck(allActiveTrucks[0]._id)\r\n\t\t}\r\n\t\telse { setLoading(false); setNoData(true) }\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst updatedSeries = [\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaReal\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaRoute\r\n\t\t\t}\r\n\t\t];\r\n\t\tsetChartData({\r\n\t\t\toptions: chartData.options,\r\n\t\t\tseries: updatedSeries\r\n\t\t})\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.chartText]);\r\n\r\n\treturn (\r\n\t\tloading ? <Spin tip=\"Loading...\"></Spin> :\r\n\t\tnoData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n\t\t<>\r\n\t\t\t<div style={{ textAlign: 'left' }}>\r\n\t\t\t\t<span style={{ marginRight: 30 }}>{props.chartText.selectTruck}</span>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={activeTruck}\r\n\t\t\t\t\tstyle={{ width: 280 }}\r\n\t\t\t\t\tonChange={(value) => getTruck(value)}>\r\n\t\t\t\t\t{activeTrucksArr}\r\n\t\t\t\t</Select>\r\n\t\t\t</div>\r\n\t\t\t<ApexChart\r\n\t\t\t\toptions={chartData.options}\r\n\t\t\t\tseries={chartData.series}\r\n\t\t\t\ttype=\"area\"\r\n\t\t\t\theight=\"300\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneTruckChart\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(OneTruckChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse } from 'antd';\r\nimport OneTruckChart from '../../../../Containers/Owner/Charts/TrucksCharts/OneTruckChart';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass TruckOne extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\texpandIconPosition=\"right\">\r\n\t\t\t\t\t<Panel header={this.props.chartText.title} key=\"1\">\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<OneTruckChart />\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneTruckChart,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(TruckOne);","import React, { useContext, useEffect, useState } from 'react';\r\nimport * as actions from '../../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport ChartsContext from '../../../context/charts-context';\r\nimport { Select, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst RoutesTableData = props => {\r\n    const { allActiveTrucks } = useContext(ChartsContext);\r\n    const [activeTrucksArr, setActiveTrucksArr] = useState([]);\r\n    const [truckId, setTruckId] = useState(null);\r\n    const [from, setFrom] = useState(new Date(moment().startOf('month').subtract(1, 'month')).getTime());\r\n    const [end, setEnd] = useState(new Date(moment()).getTime());\r\n\r\n\r\n    useEffect(() => {\r\n        if (allActiveTrucks.length) {\r\n            setActiveTrucksArr(allActiveTrucks.map(truck => {\r\n                return (<Option\r\n                    value={truck._id}\r\n                    key={truck._id}>\r\n                    {truck._id}\r\n                </Option>)\r\n            }));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const changeTruckHandler = truckId => {\r\n        setTruckId(truckId);\r\n        props.getTruck(truckId, from, end)\r\n    };\r\n\r\n    const changeDatesHandler = (dates, dateStrings) => {\r\n        const fromPicker = new Date(dateStrings[0]).getTime();\r\n        const endPicker = new Date(dateStrings[1]).getTime()       \r\n        setFrom(fromPicker);\r\n        setEnd( endPicker);\r\n        props.getTruck(truckId, fromPicker, endPicker)\r\n    };\r\n\r\n    return (\r\n        <>  \r\n            <span>{ props.text.selectTruck }</span>\r\n            <Select\r\n                defaultValue=\"--------------------------------------\"\r\n                style={{ width: 280, margin: 15 }}\r\n                onChange={(value) => changeTruckHandler(value)}>\r\n                {activeTrucksArr}\r\n            </Select>\r\n            <span style={{margin:'0 15px'}}>{ props.text.dateChoice }</span>\r\n            <RangePicker\r\n                locale={props.language === 'es' ? locale_es : locale_pl}\r\n                allowClear={false}\r\n                disabled={!truckId}\r\n                defaultValue={[\r\n                    moment().startOf('month').subtract(1, 'month'),\r\n                    moment()\r\n                ]}\r\n                ranges={{\r\n                    [props.text.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                    [props.text.lastMonth]:\r\n                        [moment().startOf('month').subtract(1, 'month'),\r\n                        moment().startOf('month').subtract(1, 'day')]\r\n                }}\r\n                onChange={changeDatesHandler}\r\n            />\r\n        </>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        text: state.initLang.textOwner.routes,\r\n        language: state.initLang.textHome.language\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTruck: (truckId, from, end) => dispatch(actions.truckRoutesProcess(truckId, from, end))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesTableData);\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport RoutesTableData from '../../../../Containers/Owner/RoutesTableData/RoutesTableData';\r\nimport { Table, Button, Icon } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst RouteTable = props => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst componentRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.routes !== undefined && props.routes.length) {\r\n\t\t\tconst routesSorted = props.routes.sort((prev, next) => {\r\n\t\t\t\treturn next._id - prev._id\r\n\t\t\t});\t\t\t\r\n\t\t\tsetData(\r\n\t\t\t\troutesSorted.map(route => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...route,\r\n\t\t\t\t\t\tdtStop: (new Date(route.dtStop)).toLocaleDateString(),\r\n\t\t\t\t\t\ttype: checkAction(route.type),\r\n\t\t\t\t\t\tfull: route.full ? props.text.yes : route.type === 3 ? props.text.no : '-',\r\n\t\t\t\t\t\ttonIn: route.type === 1 ? route.tonOut + ' t.': '-',\r\n\t\t\t\t\t\ttonOut: route.type === 2 ? (route.tonIn - route.tonOut) + ' t.' : '-',\r\n\t\t\t\t\t\tkey: route['_id'],\r\n\t\t\t\t\t\tlitres: route.type === 3 ? route.litres + ' l.': '-',\r\n\t\t\t\t\t\tcomments: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetData([]);\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [props.routes, props.text]);\r\n\t\r\n\tconst checkAction = (val) => {\r\n\t\tswitch (val) {\r\n\t\t\tcase (1): return props.text.loading;\r\n\t\t\tcase (2): return props.text.unloading;\r\n\t\t\tcase (3): return props.text.fuel;\r\n\t\t\tcase (4): return props.text.periodEnd;\r\n\t\t\tcase (5): return props.text.driversChange;\r\n\t\t\tdefault: return ''\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: props.text.date,\r\n\t\t\tdataIndex: 'dtStop',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.driver,\r\n\t\t\tdataIndex: 'driverId',\r\n\t\t\twidth: 250,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.action,\r\n\t\t\tdataIndex: 'type',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.country,\r\n\t\t\tdataIndex: 'country',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.zip,\r\n\t\t\tdataIndex: 'postal',\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.loading,\r\n\t\t\tdataIndex: 'tonIn',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.unloading,\r\n\t\t\tdataIndex: 'tonOut',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.fuel,\r\n\t\t\tdataIndex: 'litres',\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.full,\r\n\t\t\tdataIndex: 'full',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.count,\r\n\t\t\tdataIndex: 'kmStop',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.comments,\r\n\t\t\tdataIndex: 'comments'\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div style={{margin: 30}} ref={componentRef}>\r\n\t\t\t<Table\t\t\t\r\n\t\t\tcolumns={columns}\r\n\t\t\tdataSource={data}\r\n\t\t\tbordered\r\n\t\t\tloading={props.isLoading}\r\n\t\t\tsize=\"middle\"\r\n\t\t\tpagination={false}\r\n\t\t\ttitle={() => (\r\n\t\t\t\t<div style={{display:'flex', justifyContent:'space-between'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<RoutesTableData />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ReactToPrint\r\n                    \ttrigger={() => <Button><Icon type=\"printer\" /></Button>}\r\n                    \tcontent={() => componentRef.current}\r\n               \t\t/>\r\n\t\t\t\t</div>\t\r\n\t\t\t)}\r\n\t\t\tfooter={() => props.text.registration + ' ' + (props.truckId ? props.truckId: \"\")}\r\n\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\troutes: state.truckRoutes.truckRoutes,\r\n\t\tisLoading: state.truckRoutes.isLoading,\r\n\t\ttruckId: state.truckRoutes.truckId,\r\n\t\ttext: state.initLang.textOwner.routes\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(RouteTable);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DriversFuel from './Drivers/DriversFuel';\r\nimport DriversEfficiency from './Drivers/DriversEfficiency';\r\nimport DriverOne from './Drivers/DriverOne';\r\nimport TrucksFuel from './Trucks/TrucksFuel';\r\nimport TrucksEfficiency from './Trucks/TrucksEfficiency';\r\nimport TruckOne from './Trucks/TruckOne';\r\nimport RoutesTable from './RoutesTable/RoutesTable';\r\nimport { Divider } from 'antd';\r\n\r\nconst Inside = props => (\r\n\t<div className= 'container-fluid mx-auto p-5' style={{height: '92vh', overflowY: 'scroll'}}>\r\n\t\t<Divider>{props.titleText.driversTitle}</Divider>\r\n\t\t<div className=\"row mx-auto\">\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<DriversFuel />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<DriversEfficiency />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row mx-auto pt-5 mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<DriverOne />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t<Divider>{props.titleText.trucksTitle}</Divider>\r\n\t\t<div className=\"row mx-auto mt-4\">\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<TrucksFuel />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<TrucksEfficiency />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row mx-auto pt-5 mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<TruckOne />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t<Divider>{props.titleText.routesTitle}</Divider>\r\n\t\t<div className=\"row mx-auto mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<RoutesTable />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n);\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttitleText : state.initLang.textOwner.inside\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(Inside);","import React, { useRef } from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, Icon } from 'antd';\r\n\r\nconst PhoneInstruction = props => {\r\n    const componentRef = useRef();\r\n    return (\r\n        \r\n        <Modal\r\n            visible={props.visible}\r\n            title={props.instrText.title}\r\n            width='50vw'\r\n            onCancel={() => props.onClose()}\r\n            footer={[\r\n                <ReactToPrint\r\n                    trigger={() => <Button><Icon type=\"printer\" /></Button>}\r\n                    content={() => componentRef.current}\r\n                />,\r\n                <Button key=\"back\" onClick={() => props.onClose()}>\r\n                    OK\r\n                </Button>  \r\n            ]}>\r\n            <div ref={componentRef} style={{margin: 30}}>\r\n                <h5>{props.instrText.driver +': ' + props.name + ' ' + props.lastName}</h5>\r\n                <h6>{props.instrText.id + ' ' + props.id}</h6>\r\n                <hr></hr>\r\n                <div dangerouslySetInnerHTML={{__html: props.instrText.instruction}}></div>\r\n            </div>            \r\n        </Modal>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instrText: state.initLang.textOwner.driverInstruction\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(PhoneInstruction);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Driver } from './driverModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsFormText, cancelForm } from '../../../shared/utility';\r\nimport DriverInstruction from '../../../Components/Owner/Instructions/DriverInstruction';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddDriver = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.driversText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            placeholder: props.driversText.lastName,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        document: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.driversText.document,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddDriver, setShowAddDriver } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [showInstruction, setShowInstruction] = useState(false);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.driversText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.driversText]);\r\n    \r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const driver = new Driver(\r\n            {\r\n                id: controls.document.value.toLowerCase().trim(),\r\n                Driver: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    date: (new Date()).getTime(),\r\n                    routes: []\r\n                }\r\n            }\r\n        );        \r\n        driver.addDriver(setSuccesMsg, setShowInstruction, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = (event) => {\r\n        if (event) event.preventDefault();\r\n        cancelForm(controls, formElementsKeyArray, setControls);        \r\n        setShowAddDriver(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setShowInstruction(false);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.driversText.addPanelName}</h6>\r\n            <form onSubmit={submitHandler} style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    disabled={!formIsValid || isLoading}\r\n                    style={{ margin: '1rem' }}>\r\n                    {props.driversText ? props.driversText.submit : null}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        successMsg ?\r\n        <DriverInstruction \r\n            visible={showInstruction}\r\n            onClose={cancelHandler}\r\n            name= {successMsg.name}\r\n            lastName= {successMsg.lastName}\r\n            id={successMsg.id}>\r\n        </DriverInstruction> :\r\n        <Drawer\r\n            visible={showAddDriver}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                        <h6 style={{color: 'red'}}>{\r\n                            props.errorText[errorMsg] ? \r\n                            props.errorText[errorMsg] : \r\n                            props.driversText.addDriverError\r\n                        }</h6>\r\n                    </div> :\r\n                    isLoading ? <Spinner /> :\r\n                        formElement\r\n            }\r\n\r\n            <button\r\n                onClick={cancelHandler}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.driversText ? props.driversText.cancel : null}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        driversText: state.initLang.textOwner.driversForm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddDriver)","import axios from 'axios';\r\nexport class Truck {\r\n    constructor({ id, Truck, newData }) {\r\n        this.truckData = {\r\n            id,\r\n            Truck,\r\n            newData\r\n        }\r\n    };    \r\n    addTruck(success, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('/system/addTruck', this.truckData)\r\n            .then(res => { success(res.data); isLoading(false); })\r\n            .catch(e => { error(e.response.data); isLoading(false) });\r\n    };\r\n    updateTruck(success, error, isLoading, getTrucks) {\r\n        isLoading(true);\r\n        axios.put('/system/update', this.truckData)\r\n            .then(res => { success(res.data); isLoading(false); getTrucks() })\r\n            .catch(e => { error(e.message); isLoading(false) });\r\n    };\r\n    deleteTruck(success, error, isLoading, getTrucks) {\r\n        isLoading(true);\r\n        axios.delete('/system/update', {data: this.truckData} )\r\n            .then(res => { success(res.data); isLoading(false); getTrucks() })\r\n            .catch(e => { error(e.message); isLoading(false) });\r\n    };\r\n}; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Truck } from './truckModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsLabelText, cancelForm } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddTruck = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            label: props.trucksText.name,\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        consum: {\r\n            elementType: 'input',\r\n            label: props.trucksText.consum,\r\n            elementConfig: {\r\n                type: 'number'\r\n            },\r\n            value: 24,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 2\r\n            },\r\n            valid: true,\r\n            touched: true\r\n        },\r\n        norm: {\r\n            elementType: 'input',\r\n            label: props.trucksText.norm,\r\n            elementConfig: {               \r\n                type: 'number',\r\n                step: 0.1\r\n            },\r\n            value: 0.4,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 4\r\n            },\r\n            valid: true,\r\n            touched: true\r\n        },\r\n        id: {\r\n            elementType: 'input',\r\n            label: props.trucksText.id,\r\n            elementConfig: {               \r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddTruck, setShowAddTruck } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsLabelText(controls, formElementsKeyArray, props.trucksText, setControls);\r\n        // eslint-disable-next-line\r\n    }, [props.trucksText]);\r\n    \r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck(\r\n            {\r\n                id: controls.id.value.toUpperCase().trim(),\r\n                Truck: {\r\n                    name: controls.name.value.trim(),\r\n                    consum: Number(controls.consum.value),\r\n                    norm: Number(controls.norm.value),\r\n                    date: (new Date()).getTime(),\r\n                    fuel: [],\r\n                    routes: [],\r\n                    paid: (new Date()).getTime() + 3456000000\r\n                }\r\n            }\r\n        );        \r\n        truck.addTruck(setSuccesMsg, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = event => {\r\n        if (event) event.preventDefault();       \r\n        cancelForm(controls, formElementsKeyArray, setControls);       \r\n        setShowAddTruck(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.trucksText.addPanelName}</h6>\r\n            <form onSubmit={submitHandler} style={{display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    disabled={!formIsValid || isLoading}\r\n                    style={{ margin: '1rem' }}>\r\n                    {props.trucksText ? props.trucksText.submit : null}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        <Drawer\r\n            visible={showAddTruck}\r\n            placement=\"left\"\r\n            closable={false}\r\n            style={{ textAlign: 'center' }}\r\n            width='auto'\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.trucksText.addTruckSuccess}</h5>\r\n                        <h6>{successMsg}</h6>                        \r\n                    </div> :\r\n                    errorMsg ?\r\n                        <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ?\r\n                                props.errorText[errorMsg] : \r\n                                props.trucksText.addTruckError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n\r\n            <button\r\n                onClick={cancelHandler}\r\n                style={{margin: 'auto'}}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.trucksText ? props.trucksText.cancel : null}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {    \r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        trucksText: state.initLang.textOwner.trucksForm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddTruck)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Truck } from './truckModel';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, changeInputsLabelText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Select, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst EditTruck = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            label: props.trucksText.name,\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        consum: {\r\n            elementType: 'input',\r\n            label: props.trucksText.consum,\r\n            elementConfig: {\r\n                type: 'number'\r\n            },\r\n            value: 0,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 2\r\n            },\r\n            valid: true,\r\n            touched: false\r\n        },\r\n        norm: {\r\n            elementType: 'input',\r\n            label: props.trucksText.norm,\r\n            elementConfig: {               \r\n                type: 'number',\r\n                step: 0.1\r\n            },\r\n            value: 0,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 4\r\n            },\r\n            valid: true,\r\n            touched: false\r\n        },\r\n        _id: {\r\n            elementType: 'input',\r\n            label: props.trucksText.id,\r\n            elementConfig: {               \r\n                type: 'text',\r\n                disabled: true\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditTruck, setShowEditTruck } = useContext(MenuContext);\r\n    const [allTrucks, setAllTrucks] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    let options = <Option></Option>;\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getTrucks = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/system/allTrucks')\r\n            .then(res => { setAllTrucks(res.data); setIsLoading(false) })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e) })\r\n    };\r\n    useEffect(() => {\r\n        if(showEditTruck) getTrucks();\r\n    }, [showEditTruck]);\r\n\r\n    useEffect(() => {\r\n        getTrucks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsLabelText(controls, formElementsKeyArray, props.trucksText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.trucksText]);\r\n\r\n    const setTruck = val => {\r\n        const actualTruck = allTrucks.find(elem => elem._id === val);\r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = actualTruck[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck(\r\n            {\r\n                id: controls._id.value.toUpperCase().trim(),\r\n                newData: {\r\n                    'Truck.name': controls.name.value.trim(),\r\n                    'Truck.consum': Number(controls.consum.value),\r\n                    'Truck.norm': Number(controls.norm.value)\r\n                }\r\n            }\r\n        );\r\n        truck.updateTruck(setSuccesMsg, setErrorMsg, setIsLoading, getTrucks);\r\n    };\r\n    const deleteHandler = event => {\r\n        if(event) event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck({\r\n            id: controls._id.value.toUpperCase().trim()\r\n        });\r\n        confirm({\r\n            title: controls._id.value,\r\n            content: props.trucksText.deleteConfirm,\r\n            onOk() {\r\n                truck.deleteTruck(setSuccesMsg, setErrorMsg, setIsLoading, getTrucks);\r\n            },\r\n            onCancel() { return }\r\n        });\r\n    };\r\n    const cancelHandler = (event) => {\r\n        if (event) event.preventDefault();\r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditTruck(false);\r\n        setSuccesMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    if (allTrucks.length) {\r\n        options = allTrucks.map(truck => {\r\n            return <Option value={truck._id} key={truck._id}>\r\n                {truck._id}\r\n            </Option>\r\n        })\r\n    };\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.trucksText.editPanelName}</h6>\r\n            <p>{props.trucksText.choiceTruck}</p>\r\n            <Select\r\n                style={{ width: 280 }}\r\n                onChange={(value) => setTruck(value)}\r\n                defaultValue={props.textMenu.trucks}>\r\n                {options}\r\n            </Select>\r\n            <form onSubmit={submitHandler} style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <Button\r\n                    disabled={!formIsValid || isLoading}\r\n                    onClick={submitHandler}\r\n                >\r\n                    {props.trucksText ? props.trucksText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type='danger'\r\n                    disabled={!formIsValid || isLoading}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={deleteHandler}\r\n                >\r\n                    {props.trucksText ? props.trucksText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditTruck}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allTrucks.length ? \r\n                <h6 style={{margin: 20, color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                    {props.trucksText.noTrucks}\r\n                </h6> :\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.trucksText.editTruckSuccess}</h5>\r\n                        <h6>{successMsg}</h6>\r\n                    </div> :\r\n                    errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.trucksText.addTruckError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.trucksText ? props.trucksText.cancel : ''}\r\n            </Button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        trucksText: state.initLang.textOwner.trucksForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditTruck)","import axios from 'axios';\r\nexport class Worker {\r\n    constructor({ id, dataSet, newData }) {\r\n        this.workerData = {\r\n            id,\r\n            dataSet,\r\n            newData\r\n        }\r\n    };    \r\n    addWorker(success, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('api/workers/addWorker', this.workerData)\r\n            .then(res => { success(res.data); isLoading(false); })\r\n            .catch(e => { error(e.response.data.error.toString()); isLoading(false) });\r\n    };\r\n    updateWorker(success, error, isLoading, getWorkers) {\r\n        isLoading(true);\r\n        axios.put('/api/workers/editWorker', this.workerData)\r\n            .then(res => { success(res.data); isLoading(false); getWorkers() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    deleteWorker(success, error, isLoading, getWorkers) {\r\n        isLoading(true);\r\n        axios.delete('/api/workers/delWorker', {data: this.workerData} )\r\n            .then(res => { success(res.data); isLoading(false); getWorkers() })\r\n            .catch(e => { error(e.message); isLoading(false) });\r\n    };\r\n}; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Worker } from './workerModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsFormText, cancelForm, checkIdentity } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddWorker = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.workerText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.workerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddWorker, setShowAddWorker } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [notIdentity, setNotIdentity] = useState(null);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n        if(notIdentity) setNotIdentity(null)\r\n        // eslint-disable-next-line\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.workerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.workerText]);\r\n\r\n    const checkIdentityHandler = (event) => {\r\n        event.preventDefault();\r\n        if(!checkIdentity(controls.email.value, controls.email2.value)) {\r\n            setFormIsValid(false);\r\n            setNotIdentity('email');\r\n            return;\r\n        }\r\n        else {\r\n            if(!checkIdentity(controls.password.value, controls.password2.value)) {\r\n                setFormIsValid(false);\r\n                setNotIdentity('password');\r\n                return;\r\n            }\r\n        };\r\n        submitHandler()\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker(\r\n            {\r\n                dataSet: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    email: controls.email.value.trim(),\r\n                    password: controls.password.value.trim()\r\n                }\r\n            }\r\n        );\r\n        worker.addWorker(setSuccesMsg, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = (event) => {\r\n        if (event) event.preventDefault();\r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowAddWorker(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6 style={{marginBottom: '2rem'}}>{props.workerText.addPanelName}</h6>\r\n            <p>{props.workerText.restrictionText}</p>\r\n            <p>{props.workerText.addPanelDescripton}</p>\r\n            <form onSubmit={checkIdentityHandler} style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <p style={{color: 'red'}}>{\r\n                    notIdentity === 'email' ?\r\n                    props.registerText.emailNotIdentity :\r\n                    notIdentity === 'password' ?\r\n                    props.registerText.passwordNotIdentity :\r\n                    null\r\n                }</p>\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    style={{ marginRight: '1rem' }}>\r\n                    {props.workerText ? props.workerText.submit : ''}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        <Drawer\r\n            visible={showAddWorker}\r\n            placement=\"left\"\r\n            closable={false}\r\n            style={{ textAlign: 'center' }}\r\n            width='auto'\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.workerText.addWorkerSuccess}</h5>\r\n                        <h6>{successMsg}</h6>\r\n                    </div> :\r\n                    errorMsg ?\r\n                        <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.workerText.addWorkerError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n\r\n            <button\r\n                onClick={cancelHandler}\r\n                style={{ margin: 'auto' }}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.workerText ? props.workerText.cancel : ''}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        registerText: state.initLang.textHome.registerForm,\r\n        workerText: state.initLang.textOwner.workerForm,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddWorker)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Worker } from './workerModel';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, changeInputsFormText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Select, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst EditWorker = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.workerText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.workerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password3\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditWorker, setShowEditWorker } = useContext(MenuContext);\r\n    const [allWorkers, setAllWorkers] = useState([]);\r\n    const [workerCurrentEmail, setWorkerCurrentEmail] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    let options = <Option></Option>;\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getWorkers = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/api/workers/getWorkers')\r\n            .then(res => { setAllWorkers(res.data); setIsLoading(false) })\r\n            .catch(e => { console.log(e); setIsLoading(false); setErrorMsg(e) })\r\n    };\r\n    useEffect(() => {\r\n        if (showEditWorker) getWorkers();\r\n    }, [showEditWorker]);\r\n\r\n    useEffect(() => {\r\n        getWorkers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.workerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.workerText]);\r\n\r\n    const setWorker = val => {\r\n        setWorkerCurrentEmail(val);\r\n        const actualWorker = allWorkers.find(elem => elem.email === val);\r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = actualWorker[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        copyControls['password'].valid = false;\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if (props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker(\r\n            {\r\n                id: workerCurrentEmail,\r\n                newData: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    email: controls.email.value.trim(),\r\n                    password: controls.password.value.trim(),\r\n                }\r\n            }\r\n        );\r\n        worker.updateWorker(setSuccesMsg, setErrorMsg, setIsLoading, getWorkers);\r\n    };\r\n    const deleteHandler = event => {\r\n        if (event) event.preventDefault();\r\n        if (props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker({\r\n            id: controls.email.value.trim()\r\n        });\r\n        confirm({\r\n            title: controls.name.value + ' ' + controls.lastName.value,\r\n            content: props.workerText.deleteConfirm,\r\n            onOk() {\r\n                worker.deleteWorker(setSuccesMsg, setErrorMsg, setIsLoading, getWorkers);\r\n            },\r\n            onCancel() { return }\r\n        });        \r\n    };\r\n    const cancelHandler = (event) => {\r\n        if (event) event.preventDefault();\r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditWorker(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    if (allWorkers.length) {\r\n        options = allWorkers.map(worker => {\r\n            return <Option value={worker.email} key={worker.email}>\r\n                {worker.lastName + ' ' + worker.name}\r\n            </Option>\r\n        })\r\n    };\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.workerText.editPanelName}</h6>\r\n            <p>{props.workerText.restrictionText}</p>\r\n            <p>{props.workerText.choiceWorker}</p>\r\n            <Select\r\n                style={{ width: 280 }}\r\n                onChange={(value) => setWorker(value)}\r\n                defaultValue={props.textMenu.workers}>\r\n                {options}\r\n            </Select>\r\n            <form onSubmit={submitHandler} style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}       \r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                >\r\n                    {props.workerText ? props.workerText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type=\"danger\"\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={deleteHandler}\r\n                >\r\n                    {props.workerText ? props.workerText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditWorker}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allWorkers.length ? <h6 style={{ margin: 20, color: 'rgba(43, 144, 143, 0.85)' }}>{props.workerText.noWorkers}</h6> :\r\n                    successMsg ?\r\n                        <div style={{ margin: 20, textAlign: 'center' }}>\r\n                            <h5 style={{ color: 'rgba(43, 144, 143, 0.85)' }}>\r\n                                {props.workerText.editWorkerSuccess}</h5>\r\n                            <h6>{successMsg === 1 ?\r\n                                controls.name.value + ' ' + controls.lastName.value :\r\n                                successMsg}</h6>\r\n                        </div> :\r\n                        errorMsg ?\r\n                            <div style={{ margin: '1.5rem' }}>\r\n                                <h6 style={{ color: 'red' }}>{\r\n                                    props.errorText[errorMsg] ?\r\n                                        props.errorText[errorMsg] :\r\n                                        props.workerText.addWorkerError\r\n                                }</h6>\r\n                            </div> :\r\n                            isLoading ? <Spinner /> :\r\n                                formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.workerText ? props.workerText.cancel : ''}\r\n            </Button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        workerText: state.initLang.textOwner.workerForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditWorker)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport AppContext from '../../../context/app-context';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, checkIdentity, changeInputsFormText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport * as actions from '../../../store/actions';\r\nimport _ from 'lodash';\r\nconst { confirm } = Modal;\r\n\r\nconst EditCompany = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',                \r\n                placeholder: props.registerText.name\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        company: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.company\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        nip: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.nip\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 20\r\n                \r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.street\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 40\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        city: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.city\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        post: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.post\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.country\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.registerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.registerText.email2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true                \r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.registerText.password3\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.registerText.password2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditCompany, setShowEditCompany} = useContext(MenuContext);\r\n    const { setShowOwner } = useContext(AppContext);   \r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [notIdentity, setNotIdentity] = useState(null);\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getCompany = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/api/users/findUser')\r\n            .then(res => { setWorker(res.data); setIsLoading(false) })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e.response.data.error) })\r\n    };\r\n    useEffect(() => {\r\n        if(showEditCompany) getCompany();\r\n        // eslint-disable-next-line\r\n    }, [showEditCompany]);\r\n\r\n    useEffect(() => {\r\n        getCompany();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n        if(notIdentity) setNotIdentity(null)\r\n        // eslint-disable-next-line\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.registerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.registerText]);\r\n\r\n    const setWorker = val => {        \r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = val[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        copyControls['password'].valid = false;\r\n        copyControls['password2'].valid = false;\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const checkIdentityHandler = (event) => {\r\n        event.preventDefault();\r\n        if(!checkIdentity(controls.email.value, controls.email2.value)) {\r\n            setFormIsValid(false);\r\n            setNotIdentity('email');\r\n            return;\r\n        }\r\n        else {\r\n            if(!checkIdentity(controls.password.value, controls.password2.value)) {\r\n                setFormIsValid(false);\r\n                setNotIdentity('password');\r\n                return;\r\n            }\r\n        };\r\n        submitHandler()\r\n    };\r\n\r\n    const submitHandler = () => {       \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const data = {\r\n            dataSet : {\r\n                name: controls.name.value,\r\n                lastName: controls.lastName.value,\r\n                company: controls.company.value,\r\n                nip: controls.nip.value,\r\n                street: controls.street.value,\r\n                city: controls.city.value,\r\n                post: controls.post.value,\r\n                country: controls.country.value,\r\n                email: controls.email.value,\r\n                password: controls.password.value                \r\n            }\r\n        };\r\n        setIsLoading(true);\r\n        Axios.put('api/users', data)\r\n        .then(res => {\r\n            if(res.status === 200) {\r\n                setSuccesMsg(true);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch(e => {\r\n            setErrorMsg(e.response.data.error);\r\n            setIsLoading(false);\r\n        })\r\n    };\r\n    const deleteHandler = event => {\r\n        event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return }\r\n        confirm({\r\n            title: controls.company.value,\r\n            content: props.cText.deleteConfirm,\r\n            onOk() {\r\n                setIsLoading(true);\r\n                Axios.delete('api/users')\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        setShowOwner(false);\r\n                        props.onLogout();\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    setErrorMsg(e.response.data.error);\r\n                    setIsLoading(false);\r\n                })\r\n            },\r\n            onCancel() { return }\r\n        });        \r\n    };\r\n    const cancelHandler = (event) => {\r\n        if (event) event.preventDefault();\r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditCompany(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.cText.panelName}</h6>\r\n            <p>{props.restrictionText}</p>\r\n            <form onSubmit={checkIdentityHandler} style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <p style={{color: 'red'}}>{\r\n                    notIdentity === 'email' ?\r\n                    props.registerText.emailNotIdentity :\r\n                    notIdentity === 'password' ?\r\n                    props.registerText.passwordNotIdentity :\r\n                    null\r\n                }</p>\r\n                <Button\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    onClick={ checkIdentityHandler }\r\n                >\r\n                        {props.cText ? props.cText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type=\"danger\"\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={ deleteHandler }\r\n                >\r\n                    {props.cText ? props.cText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditCompany}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {                   \r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.cText.editCompanySuccess}</h5>                       \r\n                    </div> :\r\n                    errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.cText.addWorkerError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n            <Button onClick={cancelHandler}>\r\n                {props.cText ? props.cText.cancel : ''}\r\n            </Button> \r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        cText: state.initLang.textOwner.companyEdit,\r\n        registerText: state.initLang.textHome.registerForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        restrictionText: state.initLang.textOwner.workerForm.restrictionText,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logoutUser())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCompany)","import React, {useEffect, useState, useContext} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Drawer, Table, Switch } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst Payments = props => {\r\n\r\n    const { showPayments, setShowPayments} = useContext(MenuContext);\r\n    const [allTrucks, setAllTrucks] = useState([]);\r\n    const [data, setData] = useState([]);   \r\n    const [toCheck, setToCheck] = useState({});\r\n    const [totalBasket, setTotalBasket] = useState(0);    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const deadLine = Number(Date.now()) + 999900000;\r\n\r\n    const columns = [\r\n\t\t{\r\n\t\t\ttitle: props.payText.registration,\r\n            dataIndex: 'registration',\r\n            render: text => <h6 \r\n                style={{color: '#1890ff'}}>\r\n                {text}\r\n            </h6>\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.paidTo,\r\n            dataIndex: 'paidTo',\r\n            render: text => {\r\n                let textColor;\r\n                text < deadLine ? textColor='red' : textColor='#1890ff';\r\n                text = (new Date(text)).toLocaleDateString()\r\n                return <h6 style={{color: textColor}}>{text}</h6>}\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy4M,\r\n\t\t\tdataIndex: 'buy4M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy8M,\r\n\t\t\tdataIndex: 'buy8M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy12M,\r\n\t\t\tdataIndex: 'buy12M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.basket,\r\n            dataIndex: 'basket',\r\n            render: text => <h6 \r\n                style={{color: '#1890ff'}}>\r\n                {text ? text + props.payText.currency: null}\r\n            </h6>\r\n\t\t}\r\n    ]\r\n\r\n    const getPayments = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/system/allTrucks')\r\n            .then(res => { setAllTrucks(res.data); setIsLoading(false) })\r\n            .catch(e => { console.log(e); setIsLoading(false); setErrorMsg(e.response.data.error) })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(showPayments) getPayments();\r\n        // eslint-disable-next-line\r\n    }, [showPayments]);\r\n\r\n    useEffect(() => {\r\n        if(allTrucks.length) {\r\n            const tempToCheck = {};\r\n            allTrucks.forEach(elem => tempToCheck[elem._id] = {id: null, value: null});           \r\n            setToCheck(tempToCheck)\r\n        }\r\n    },[allTrucks]);\r\n\r\n    useEffect(() => {\r\n        if(allTrucks.length) {\r\n            setData(\r\n                allTrucks.map(elem => { \r\n                    return {\r\n                        registration: elem._id,\r\n                        paidTo: elem.paid,\r\n                        \r\n                        buy4M: <Switch name={elem._id} value={48} id={elem._id + '_122'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_122'}\r\n                        />,\r\n                        \r\n                        buy8M: <Switch name={elem._id} value={80} id={elem._id + '_244'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_244'}\r\n                        />,\r\n                        \r\n                        buy12M: <Switch name={elem._id} value={96} id={elem._id + '_365'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_365'}\r\n                        />,\r\n                        basket: toCheck[elem._id].value,\r\n                        key: elem._id\r\n                    }\r\n                })\r\n            );\r\n        } // eslint-disable-next-line\r\n    },[toCheck]);\r\n\r\n    const switchHandler = (checked, e) => {      \r\n        const copy = _.cloneDeep(toCheck)       \r\n        if(checked) {\r\n            copy[e.name].id = e.id;\r\n            copy[e.name].value = e.value;\r\n        }\r\n        else {\r\n            copy[e.name].id = null;\r\n            copy[e.name].value = null;\r\n        }       \r\n        setToCheck(copy);\r\n        checkTotal(copy);\r\n    };\r\n\r\n    const checkTotal = (copy) => {\r\n        let total = 0;\r\n        for(let key in copy) {            \r\n            total += Number(copy[key].value ? copy[key].value : '0')\r\n        }        \r\n        setTotalBasket(total);\r\n    };\r\n\r\n    const payHandler = ()  => {\r\n        //DotPay connection\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setTotalBasket(0);\r\n        setShowPayments(false)\r\n    }\r\n    \r\n    return(\r\n        <Drawer\r\n            visible={showPayments}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            height='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        > {\r\n            errorMsg ? errorMsg :\r\n            isLoading ? <Spinner /> :\r\n\r\n            <div style={{width: '90%', margin: '1rem auto'}}>\r\n                <h4 style={{color: 'rgba(43, 144, 143, 0.85)', margin: 20}} >\r\n                    {props.payText.title}\r\n                </h4>\r\n                <h6>\r\n                    {props.payText.infoHeader}\r\n                </h6>\r\n                <p style={{padding: 40}}>\r\n                    {props.payText.info}\r\n                </p>\r\n                <Table \r\n                    columns={columns}\r\n                    dataSource={data}\r\n                    bordered\r\n                    size='middle'\r\n                    width='80%'\r\n                    pagination={{ pageSize: 20 }}                   \r\n                    footer={() => {\r\n                        const vat = Number( (totalBasket * props.payText.vatRate).toFixed(2));\r\n                        const gross = vat + totalBasket\r\n                        return (\r\n                            !totalBasket ? null :\r\n                            <h6 style={{textAlign: 'right', padding: '0 20px'}}>{\r\n                                `${props.payText.total} ${totalBasket} ${props.payText.currency}\r\n                                 + ${vat} ${props.payText.vat} = ${gross} ${props.payText.currency}`}\r\n                            </h6>\r\n                        )\r\n                    }}\r\n                />\r\n                <p style={{padding: '20px 40px'}}>\r\n                    {props.payText.acceptPayment}\r\n                </p>               \r\n            </div>\r\n        }\r\n            <button\r\n                onClick={payHandler}\r\n                disabled\r\n                style={{marginRight: 30}}\r\n                className='btn btn-primary btn-sm'>\r\n                {props.payText ? props.payText.payButton : ''}\r\n            </button>\r\n            <button\r\n                onClick={cancelHandler}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.payText ? props.payText.cancel : ''}\r\n            </button>\r\n        </Drawer>        \r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        payText: state.initLang.textOwner.companyPayment\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Payments);","import React, { useContext, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport InstructionPhone from '../../../assets/img/instructionPhone.jpg';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst PhoneInstruction = props => {\r\n\r\n    const [_gcn] = useState(Cookies.get('_gcn'))\r\n    const {showPhoneInstruction, setShowPhoneInstruction } = useContext(MenuContext);\r\n    \r\n    return (\r\n        <Modal\r\n        visible={showPhoneInstruction}\r\n        title={props.instrText.title}\r\n        width='50vw'\r\n        onCancel={() => setShowPhoneInstruction(false)}\r\n        footer={[\r\n            <Button key=\"back\" onClick={() => setShowPhoneInstruction(false)}>\r\n                OK\r\n            </Button>            \r\n        ]}\r\n    >\r\n        <p>{props.instrText.p1}</p>\r\n        <p>{props.instrText.p2 + ' ' + window.location.href + _gcn}</p>\r\n        <p>{props.instrText.p3}</p>\r\n        <p>{props.instrText.p4}</p>\r\n        <p>{props.instrText.p5}</p>\r\n        <img style={{margin: '20px 100px'}} src={InstructionPhone} alt='instructionPhone' />\r\n        <p>{props.instrText.p6}</p>\r\n        <p>{props.instrText.p7}</p>\r\n        \r\n    </Modal>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instrText: state.initLang.textOwner.phoneInstruction\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(PhoneInstruction);\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport NavForBigDevices from '../../Nav/NavForBigDevices/NavForBigDevices';\r\nimport Menu from '../Menu/Menu';\r\nimport Inside from '../Inside/Inside';\r\nimport AddDriver from '../../../Containers/Owner/Drivers/AddDriver';\r\nimport AddTruck from '../../../Containers/Owner/Trucks/AddTruck';\r\nimport EditTruck from '../../../Containers/Owner/Trucks/EditTruck';\r\nimport AddWorker from '../../../Containers/Owner/Workers/AddWorker';\r\nimport EditWorker from '../../../Containers/Owner/Workers/EditWorker';\r\nimport EditCompany from '../../../Containers/Owner/Company/EditCompany';\r\nimport Payments from '../../../Containers/Owner/Company/Payments';\r\nimport PhoneInstruction from '../../../Components/Owner/Instructions/PhoneInstruction';\r\nimport AppContext from '../../../context/app-context';\r\nimport {Modal} from 'antd';\r\nimport classes from './OwnerLayout.css';\r\nconst EditDriver = React.lazy(() => import('../../../Containers/Owner/Drivers/EditDriver'));\r\n\r\n\r\nconst OwnerLayout = props => {\r\n    \r\n    const { setShowOwner } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n       if(!props.token) {\r\n        setShowOwner(false);\r\n        props.onLogout();\r\n       } // eslint-disable-next-line\r\n    }, [props.token]);\r\n\r\n    const [showAddDriver, setShowAddDriver] = useState(false);\r\n    const [showEditDriver, setShowEditDriver] = useState(false);\r\n    const setAddDriver = val => setShowAddDriver(val);\r\n    const setEditDriver = val => setShowEditDriver(val);\r\n\r\n    const [showAddTruck, setShowAddTruck] = useState(false);\r\n    const [showEditTruck, setShowEditTruck] = useState(false);\r\n    const setAddTruck = val => setShowAddTruck(val);\r\n    const setEditTruck = val => setShowEditTruck(val);\r\n\r\n    const [showAddWorker, setShowAddWorker] = useState(false);\r\n    const [showEditWorker, setShowEditWorker] = useState(false);\r\n    const setAddWorker = val => setShowAddWorker(val);\r\n    const setEditWorker = val => setShowEditWorker(val);\r\n\r\n    const [showEditCompany, setShowEditCompany] = useState(false);\r\n    const setEditCompany = val => setShowEditCompany(val);\r\n\r\n    const [showPayments, setShowPayments] = useState(false);\r\n    const setPayments = val => setShowPayments(val);\r\n\r\n    const [showPhoneInstruction, setShowPhoneInstruction] = useState(false);\r\n    const setPhoneInstruction = val => setShowPhoneInstruction(val);\r\n\r\n    \r\n\r\n    const [showDemoModal, setShowDemoModal] = useState(false);\r\n\r\n    return (\r\n        <MenuContext.Provider value ={{\r\n            showAddDriver,\r\n            setShowAddDriver: setAddDriver,\r\n            showEditDriver,\r\n            setShowEditDriver: setEditDriver,\r\n            showAddTruck,\r\n            setShowAddTruck: setAddTruck,\r\n            showEditTruck,\r\n            setShowEditTruck: setEditTruck,\r\n            showAddWorker,\r\n            setShowAddWorker:setAddWorker,\r\n            showEditWorker,\r\n            setShowEditWorker: setEditWorker,\r\n            showEditCompany,\r\n            setShowEditCompany: setEditCompany,\r\n            showPayments,\r\n            setShowPayments:setPayments,\r\n            showPhoneInstruction,\r\n            setShowPhoneInstruction: setPhoneInstruction\r\n            }}>\r\n            <div>\r\n                <NavForBigDevices />\r\n                <div className={classes.Container}>\r\n                    <Menu />\r\n                    <Inside />\r\n                </div>                       \r\n            </div>\r\n            <Modal\r\n                visible={showDemoModal}\r\n                closable={false}\r\n                zIndex={2000}\r\n                cancelButtonProps={{disabled: true}}\r\n                onOk={() => setShowDemoModal(false)}\r\n                >\r\n                {props.demoText}\r\n            </Modal>\r\n            <AddDriver demoModal={setShowDemoModal} />\r\n            <EditDriver demoModal={setShowDemoModal} />\r\n            <AddTruck demoModal={setShowDemoModal} />\r\n            <EditTruck demoModal={setShowDemoModal} />\r\n            <AddWorker demoModal={setShowDemoModal} />\r\n            <EditWorker demoModal={setShowDemoModal} />\r\n            <EditCompany demoModal={setShowDemoModal}/>\r\n            <Payments />\r\n            <PhoneInstruction />\r\n        </MenuContext.Provider>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.authReducer.token,\r\n        demoText: state.initLang.textOwner.userMenu.demo\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logoutUser())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnerLayout);\r\n"],"sourceRoot":""}