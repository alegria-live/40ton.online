{"version":3,"sources":["context/menu-context.js","Components/Owner/Inside/Drivers/Drivers.css","Components/Owner/Inside/Trucks/Trucks.css","Containers/Owner/Drivers/driverModel.js","Components/Owner/Menu/Menu.css","assets/img/instructionPhone.jpg","Components/Owner/OwnerLayout/OwnerLayout.css","Components/Owner/Menu/MenuContent/MenuContent.js","Components/Owner/Menu/Menu.js","Components/UI/Charts/ApexChart.js","Containers/Owner/Charts/DriversCharts/FuelChart.js","Components/Owner/Inside/Drivers/DriversFuel.js","Containers/Owner/Charts/DriversCharts/EfficiencyChart.js","Components/Owner/Inside/Drivers/DriversEfficiency.js","Containers/Owner/Charts/DriversCharts/OneDriverChart.js","Components/Owner/Inside/Drivers/DriverOne.js","Containers/Owner/Charts/TrucksCharts/FuelChart.js","Components/Owner/Inside/Trucks/TrucksFuel.js","Containers/Owner/Charts/TrucksCharts/EfficiencyChart.js","Components/Owner/Inside/Trucks/TrucksEfficiency.js","Containers/Owner/Charts/TrucksCharts/OneTruckChart.js","Components/Owner/Inside/Trucks/TruckOne.js","Containers/Owner/RoutesTableData/RoutesTableData.js","Components/Owner/Inside/RoutesTable/RoutesTable.js","Components/Owner/Inside/Inside.js","Components/Owner/Instructions/DriverInstruction.js","Containers/Owner/Drivers/AddDriver.js","Containers/Owner/Trucks/truckModel.js","Containers/Owner/Trucks/AddTruck.js","Containers/Owner/Trucks/EditTruck.js","Containers/Owner/Trucks/Theft.js","Containers/Owner/Workers/workerModel.js","Containers/Owner/Workers/AddWorker.js","Containers/Owner/Workers/EditWorker.js","Containers/Owner/Company/EditCompany.js","Containers/Owner/Company/Payments.js","Components/Owner/Instructions/PhoneInstruction.js","Containers/Owner/ManualRoutes/ManualRoutes.js","Components/Owner/OwnerLayout/OwnerLayout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","menuContext","n","React","showAddDriver","setShowAddDriver","showEditDriver","setShowEditDriver","showAddTruck","setShowAddTruck","showEditTruck","showTheft","setShowTheft","setShowEditTruck","showEditCompny","setShowEditCompany","showPayments","setShowPayments","showOrders","setShowOrders","showInvoices","setShowInvoices","showPhoneInstruction","setShowPhoneInstruction","showManualRoutes","setShowManualRoutes","__webpack_exports__","module","exports","Fuel","FuelChart","Driver","_ref","id","newData","Object","D_Project_Tir_40_react_40_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","driverData","_Driver","D_Project_Tir_40_react_40_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","success","showInstruction","error","isLoading","axios","res","e","getDrivers","data","Menu","p","Container","SubMenu","connect","mapStateToProps","state","textMenu","userMenu","MenuContent","props","_useState","useState","_useState2","slicedToArray","collapsed","setCollapsed","_useContext","useContext","menu_context","setShowAddWorker","setShowEditWorker","react_default","a","createElement","className","es_button","type","onClick","style","marginBottom","icon","menu","defaultSelectedKeys","mode","theme","inlineCollapsed","Item","cursor","menuName","title","drivers","addDriver","editDriver","trucks","addTruck","editTruck","theft","workers","addWorker","editWorker","company","editCompany","payments","orders","invoices","instructions","href","systemInstructionLink","target","systemInstruction","driverInstruction","routes","manualRoutes","Owner_Menu_Menu","classes","Menu_MenuContent_MenuContent","ApexChart","width","react_apexcharts_min_default","options","series","height","Component","chartText","driverCharts","noData","setNoData","_useState3","_useState4","loading","setLoading","_useState5","chart","plotOptions","bar","horizontal","yaxis","labels","maxWidth","dataLabels","enabled","offsetX","fontSize","colors","xaxis","min","trim","axisTicks","show","borderType","color","offsetY","categories","palette","name","chartTooltipFuel","_useState6","chartData","setChartData","react","getData","dateFrom","dateEnd","from","end","urlData","encodeURI","concat","length","newCat","driverName","newSeries","updatedSeries","objectSpread","updatedOptions","spin","tip","RangePicker","DatePicker","Panel","Collapse","DriversFuel","moment","onDateChange","dates","dateStrings","_this","setState","prevState","Date","getTime","collapse","defaultActiveKey","expandIconPosition","header","titleFuel","extra","event","console","marginRight","dateChoice","locale","language","es_ES_default","pl_PL_default","allowClear","defaultValue","ranges","defineProperty","thisMonth","lastMonth","onChange","DriversCharts_FuelChart","descriptionFuel","DriversFuel_DriversFuel","truckCharts","EfficencyChart","formatter","val","chartTooltipEfficiency","DriversEfficiency","DriversEfficiency_Panel","titleEfficiency","DriversEfficiency_RangePicker","EfficiencyChart","descriptionEfficiency","DriversEfficiency_DriversEfficiency","Option","Select","oneDriverChart","OneDriverChart","legend","stroke","curve","tooltip","x","format","mediaReal","mediaRoute","allActiveDrivers","charts_context","_useState7","_useState8","activeDriversArr","setActiveDriversArr","_useState9","_useState10","activeDriver","setActiveDriver","getDriver","driverId","elem","newSeries_0","mediaRealArr","newSeries_1","mediaRouteArr","driver","_id","useEffect","Fragment","textAlign","selectDriver","es_select","DriverOne","DriverOne_Panel","DriversCharts_OneDriverChart","description","DriverOne_DriverOne","TrucksFuel","TrucksFuel_Panel","TrucksFuel_RangePicker","TrucksCharts_FuelChart","TrucksFuel_TrucksFuel","TruksEfficiency","TrucksEfficiency_Panel","TrucksEfficiency_RangePicker","TrucksCharts_EfficiencyChart","TrucksEfficiency_TruksEfficiency","oneTruckChart","OneTruckChart","allActiveTrucks","activeTrucksArr","setActiveTrucksArr","activeTruck","setActiveTruck","getTruck","truckId","truck","OneTruckChart_Option","selectTruck","TruckOne","TruckOne_Panel","TrucksCharts_OneTruckChart","TruckOne_TruckOne","text","mapDispatchToProps","dispatch","actions","RoutesTableData","setTruckId","setFrom","setEnd","Axios","routesLength","RoutesTableData_Option","margin","changeTruckHandler","RoutesTableData_RangePicker","disabled","changeDatesHandler","fromPicker","endPicker","truckRoutes","RouteTable","setData","componentRef","useRef","routesSorted","prev","next","route","dtStop","toLocaleDateString","checkAction","full","tonIn","tonOut","litres","comments","unloading","fuel","periodEnd","driversChange","columns","date","dataIndex","action","country","zip","count","ref","table","dataSource","bordered","size","pagination","display","justifyContent","Owner_RoutesTableData_RoutesTableData","lib_default","trigger","content","current","footer","titleText","inside","Inside","overflowY","divider","driversTitle","Drivers_DriversFuel","Drivers_DriversEfficiency","Drivers_DriverOne","trucksTitle","Trucks_TrucksFuel","TrucksEfficiency","Trucks_TruckOne","routesTitle","RoutesTable","instrText","PhoneInstruction","modal","visible","onCancel","onClose","lastName","dangerouslySetInnerHTML","__html","instruction","errorText","serverResErrors","driversText","driversForm","demo","AddDriver","elementType","elementConfig","placeholder","validation","required","minLength","maxLength","valid","touched","document","controls","setControls","setIsLoading","successMsg","setSuccesMsg","errorMsg","setErrorMsg","formIsValid","setFormIsValid","_useState11","_useState12","setShowInstruction","formElementsArray","formElementsKeyArray","config","validFormHandler","changeInputsFormText","cancelHandler","cancelForm","form","formElement","Input","label","invalid","shouldValidate","changed","inputChangedHandler","addPanelName","submitHandler","driverModel","DriverInstruction","drawer","placement","closable","addDriverError","Spinner","Truck","classCallCheck","truckData","_Truck","createClass","getTrucks","trucksText","trucksForm","AddTruck","consum","norm","step","changeInputsLabelText","truckModel_Truck","Number","paid","addTruckSuccess","addTruckError","confirm","Modal","EditTruck","allTrucks","setAllTrucks","EditTruck_Option","clearSelect","setTimeout","editPanelName","choiceTruck","setTruck","actualTruck","copyControls","_","Truck.name","Truck.consum","Truck.norm","deleteHandler","deleteConfirm","onOk","editTruckSuccess","noTrucks","_useContext2","getActiveTrucks","theftDate","setTheftDate","Theft_Option","theftPanelName","theftPanelDescription","choiceTheftData","date_picker","_d","theftSuccess","theftError","Worker","dataSet","workerData","getWorkers","registerText","registerForm","workerText","workerForm","perm","AddWorker","email","isEmail","email2","password","password2","showAddWorker","notIdentity","setNotIdentity","workerModel_Worker","worker","restrictionText","addPanelDescripton","checkIdentityHandler","checkIdentity","addWorkerSuccess","addWorkerError","EditWorker","password3","showEditWorker","allWorkers","setAllWorkers","workerCurrentEmail","setWorkerCurrentEmail","_useState13","_useState14","EditWorker_Option","choiceWorker","setWorker","actualWorker","editWorkerSuccess","noWorkers","cText","companyEdit","onLogout","EditCompany","nip","street","city","post","showEditCompany","setShowOwner","app_context","panelName","editCompanySuccess","payText","companyPayment","Payments","toCheck","setToCheck","totalBasket","setTotalBasket","deadLine","registration","render","paidTo","textColor","buy4M","buy8M","buy12M","basket","currency","tempToCheck","es_switch","checked","switchHandler","copy","checkTotal","total","infoHeader","padding","info","pageSize","vat","vatRate","toFixed","gross","acceptPayment","payHandler","hidden","phoneInstruction","lang","Cookies","_gcn","url","window","host","p1","p3","p4","p5","src","instructionPhone_default","alt","p6","p7","manualText","_csrf","ManualRoutes","setAction","kmStop","weight","postal","displayValue","no","yes","fullFirst","lastRouteLength","setLastRouteLength","allDrivers","setAllDrivers","_useState15","_useState16","_useState17","_useState18","setDate","_useState19","_useState20","activeToRouteDelete","setActiveToRouteDelete","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","trucksOptions","ManualRoutes_Option","driversOptions","trucksForRouteDelete","choiceDriver","marginTop","choiceAction","load","unLoad","weightToOut","fullOut","add","fuel_Id","formRouteDelete","deleteTitle","addRouteError","EditDriver","then","bind","token","demoText","OwnerLayout","showDemoModal","setShowDemoModal","Provider","setAddDriver","setEditDriver","setAddTruck","setEditTruck","setTheft","setAddWorker","setEditWorker","setEditCompany","setPayments","setPhoneInstruction","setManualRoutes","NavForBigDevices","Owner_Inside_Inside","zIndex","cancelButtonProps","Drivers_AddDriver","demoModal","Trucks_AddTruck","Trucks_EditTruck","Theft","Workers_AddWorker","Workers_EditWorker","Company_EditCompany","Company_Payments","Instructions_PhoneInstruction","Owner_ManualRoutes_ManualRoutes"],"mappings":"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","file":"static/js/7.9ee27c76.chunk.js","sourcesContent":["import React from 'react';\r\nconst menuContext = React.createContext({\r\n    showAddDriver: false,\r\n    setShowAddDriver: () => {},\r\n    showEditDriver: false,\r\n    setShowEditDriver: () => {},\r\n    showAddTruck: false,\r\n    setShowAddTruck: () => {},\r\n    showEditTruck: false,\r\n    showTheft: false,\r\n    setShowTheft: () => {},\r\n    setShowEditTruck: () => {},\r\n    showEditCompny: false,\r\n    setShowEditCompany: () => {},\r\n    showPayments: false,\r\n    setShowPayments: () => {},\r\n    showOrders: false,\r\n    setShowOrders: () => {},\r\n    showInvoices: false,\r\n    setShowInvoices: () => {},\r\n    showPhoneInstruction: false,\r\n    setShowPhoneInstruction: () => {},\r\n    showManualRoutes: false,\r\n    setShowManualRoutes: () => {} \r\n});\r\nexport default menuContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fuel\":\"Drivers__Fuel__qZWNH\",\"FuelChart\":\"Drivers__FuelChart__2YQVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fuel\":\"Trucks__Fuel__3g5Yq\",\"FuelChart\":\"Trucks__FuelChart__21O_j\"};","import axios from 'axios';\r\nexport class Driver {\r\n    constructor({ id, Driver, newData }) {\r\n        this.driverData = {\r\n            id,\r\n            Driver,\r\n            newData\r\n        }\r\n    };    \r\n    addDriver(success, showInstruction, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('/system/addDriver', this.driverData)\r\n            .then(res => { success(res.data); showInstruction(true); isLoading(false); })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    updateDriver(success, error, isLoading, getDrivers) {\r\n        isLoading(true);\r\n        axios.put('/system/update', this.driverData)\r\n            .then(res => { success(res.data); isLoading(false); getDrivers() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    deleteDriver(success, error, isLoading, getDrivers) {\r\n        isLoading(true);\r\n        axios.delete('/system/update', {data: this.driverData} )\r\n            .then(res => { success(res.data); isLoading(false); getDrivers() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n}; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu__Menu__1fp1Z\"};","module.exports = __webpack_public_path__ + \"static/media/instructionPhone.182d3c7a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"OwnerLayout__Container__360Bb\"};","import React, { useState, useContext } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Icon, Button } from 'antd';\r\nimport MenuContext from '../../../../context/menu-context';\r\nconst { SubMenu } = Menu;\r\n\r\nconst MenuContent = props => {\r\n\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\tconst {\r\n\t\tsetShowAddDriver,\r\n\t\tsetShowEditDriver,\t\t\r\n\t\tsetShowAddTruck,\r\n\t\tsetShowEditTruck,\r\n\t\tsetShowTheft,\r\n\t\tsetShowAddWorker,\r\n\t\tsetShowEditWorker,\r\n\t\tsetShowEditCompany,\r\n\t\tsetShowPayments,\r\n\t\tsetShowPhoneInstruction,\r\n\t\tsetShowManualRoutes\r\n\t} = useContext(MenuContext);\r\n\t\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<Button type=\"primary\" onClick={() => setCollapsed(!collapsed)} style={{ marginBottom: 20 }}>\r\n\t\t\t\t<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tdefaultSelectedKeys={['1']}\t\t\t\t\r\n\t\t\t\tmode=\"vertical\"\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t\tinlineCollapsed={collapsed}\r\n\t\t\t>\r\n\t\t\t\t<Menu.Item key=\"1\" style={{ cursor: \"none\" }}>\r\n\t\t\t\t\t<Icon type=\"menu\" />\r\n\t\t\t\t\t<span>{props.textMenu.menuName}</span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"drivers\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"user-add\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.drivers}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddDriver(true)} key=\"2\">{props.textMenu.addDriver}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditDriver(true)} key=\"3\">{props.textMenu.editDriver}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"trucks\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"dashboard\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.trucks}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddTruck(true)} key=\"4\">{props.textMenu.addTruck}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditTruck(true)} key=\"5\">{props.textMenu.editTruck}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowTheft(true)} key=\"6\">{props.textMenu.theft}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"workers\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"usergroup-add\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.workers}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowAddWorker(true)} key=\"7\">{props.textMenu.addWorker}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditWorker(true)} key=\"8\">{props.textMenu.editWorker}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"company\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"tool\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.company}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowEditCompany(true)} key=\"9\">{props.textMenu.editCompany}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowPayments(true)} key=\"10\">{props.textMenu.payments}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => {} } key=\"11\">{props.textMenu.orders}</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => {}} key=\"12\">{props.textMenu.invoices}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"instructions\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"info-circle\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.instructions}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\t\t\t\t\t\r\n\t\t\t\t\t<Menu.Item onClick={() => {} } key=\"13\">\r\n\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\thref={props.textMenu.systemInstructionLink}\r\n\t\t\t\t\t\t\ttarget='_blanc'>{props.textMenu.systemInstruction}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowPhoneInstruction(true)} key=\"14\">{props.textMenu.driverInstruction}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"routes\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Icon type=\"car\" />\r\n\t\t\t\t\t\t\t<span>{props.textMenu.routes}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item onClick={() => setShowManualRoutes(true)} key=\"15\">{props.textMenu.manualRoutes}</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n}\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttextMenu: state.initLang.textOwner.userMenu\t\t\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(MenuContent)","import React from 'react';\r\nimport classes from './Menu.css';\r\nimport MenuContent from './MenuContent/MenuContent';\r\n\r\nconst Menu = () => (\r\n    <div className={classes.Menu}>\r\n        <MenuContent />\r\n    </div>\r\n);\r\nexport default Menu","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartRender extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\" style={{ width: \"98%\" }}>\r\n                        <Chart\r\n                            options={this.props.options}\r\n                            series={this.props.series}\r\n                            type={this.props.type}\r\n                            height={this.props.height}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartRender;","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst FuelChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Driver-Fuel-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                offsetX: 300,\r\n                style: {\r\n                    fontSize: '12px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {\r\n                min:20,\r\n                labels: {\r\n                    trim: false,\r\n                    axisTicks: {\r\n                        show: true,\r\n                        borderType: 'solid',\r\n                        color: '#78909C',\r\n                        height: 6,\r\n                        offsetX: 0,\r\n                        offsetY: 0\r\n                    }\r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },        \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipFuel,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = (from, end) => {\r\n        const urlData = encodeURI(\r\n            `from=${from}&end=${end}&param=mediaReal`);\r\n        setLoading(true);\r\n        axios.get(`/system/driversFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data.driverName\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setNoData(true)\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.driverCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FuelChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Icon, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport FuelChart from '../../../../Containers/Owner/Charts/DriversCharts/FuelChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\n// const callback = (key) => {\r\n//   console.log(key);\r\n// }\r\nconst genExtra = () => (\r\n\t<Icon\r\n\t\ttype=\"setting\"\r\n\t\tonClick={event => {\r\n\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tconsole.log('extra')\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nclass DriversFuel extends React.Component {\r\n\r\n\tstate = {\r\n\t\tdateFrom: moment().startOf('month').subtract(1, 'month'),\r\n\t\tdateEnd: moment()\r\n\t};\r\n\t\r\n\tonDateChange = (dates, dateStrings) => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\tdateFrom: new Date(dateStrings[0]).getTime(),\r\n\t\t\t\tdateEnd: new Date(dateStrings[1]).getTime()\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\t// onChange={callback}\r\n\t\t\t\t\texpandIconPosition=\"right\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Panel header={this.props.chartText.titleFuel} key=\"1\" extra={genExtra()}>\r\n\t\t\t\t\t\t<span style={{ marginRight: 10 }}>{this.props.chartText.dateChoice}</span>\r\n\t\t\t\t\t\t<RangePicker\r\n\t\t\t\t\t\t\tlocale={this.props.language === 'es' ? locale_es : locale_pl}\r\n\t\t\t\t\t\t\tallowClear={false}\r\n\t\t\t\t\t\t\tdefaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n\t\t\t\t\t\t\tmoment()]}\r\n\t\t\t\t\t\t\tranges={{\r\n\t\t\t\t\t\t\t\t[this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n\t\t\t\t\t\t\t\t[this.props.chartText.lastMonth]:\r\n\t\t\t\t\t\t\t\t\t[moment().startOf('month').subtract(1, 'month'),\r\n\t\t\t\t\t\t\t\t\tmoment().startOf('month').subtract(1, 'day')]\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChange={this.onDateChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<FuelChart\r\n\t\t\t\t\t\t\t\tdateFrom={new Date(this.state.dateFrom).getTime()}\r\n\t\t\t\t\t\t\t\tdateEnd={new Date(this.state.dateEnd).getTime()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.descriptionFuel}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.driverCharts,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(DriversFuel);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst EfficencyChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Driver-Efficency-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {                \r\n                labels: {\r\n                    maxWidth: 360                  \r\n                }\r\n            },            \r\n            xaxis: {\r\n                labels: {\r\n                    \"formatter\": function (val) {\r\n                        return val.toFixed(2)\r\n                    },\r\n                    trim: false                    \r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        }, \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipEfficiency,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=ratio`);\r\n        setLoading(true);\r\n        axios.get(`/system/driversFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data.driverName\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setNoData(true)\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.truckCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(EfficencyChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Icon, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport EfficiencyChart from '../../../../Containers/Owner/Charts/DriversCharts/EfficiencyChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\n// const callback = (key) => {\r\n//   console.log(key);\r\n// }\r\nconst genExtra = () => (\r\n  <Icon\r\n    type=\"setting\"\r\n    onClick={event => {\r\n      // If you don't want click extra trigger collapse, you can prevent this:\r\n      event.stopPropagation();\r\n      console.log('extra')      \r\n    }}\r\n  />\r\n);\r\n\r\nclass DriversEfficiency extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  }\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  }  \r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleEfficiency} key=\"1\" extra={genExtra()}>\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <EfficiencyChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionEfficiency}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.driverCharts,\r\n    language: state.initLang.language\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DriversEfficiency);","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport ChartsContext from '../../../../context/charts-context';\r\nconst { Option } = Select;\r\n\r\nconst OneDriverChart = props => {\r\n\r\n\tconst [chartData, setChartData] = useState(\r\n\t\t{\r\n\t\t\toptions: {\r\n\t\t\t\tdataLabels: {\r\n\t\t\t\t\tenabled: false\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\toffsetY: -10\r\n\t\t\t\t},\r\n\t\t\t\tstroke: {\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\tcolors: ['red', 'blue'],\r\n\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\ttype: 'datetime',\r\n\t\t\t\t\tcategories: [],\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\tformat: 'dd/MM/yy'\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tname: props.chartText.mediaReal,\r\n\t\t\t\tdata: []\r\n\t\t\t}, {\r\n\t\t\t\tname: props.chartText.mediaRoute,\r\n\t\t\t\tdata: []\r\n\t\t\t}],\t\t\t\r\n\t\t\tloading: false,\r\n\t\t\tnoData: true\r\n\t\t}\r\n\t);\r\n\r\n\tconst { allActiveDrivers } = useContext(ChartsContext);\r\n\tconst [noData, setNoData] = useState(true);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [activeDriversArr, setActiveDriversArr] = useState([]);\r\n\tconst [activeDriver, setActiveDriver] = useState(null)\r\n\r\n\tconst getDriver = (driverId) => {\r\n\t\tsetLoading(true);\r\n\t\taxios.get('/system/oneDriverData?driverId=' + driverId)\r\n\t\t\t.then((res) => {\t\t\t\t\r\n\t\t\t\tif (!res.data) {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetNoData(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t\tconst newCat = res.data.datesArr.map(elem => moment(elem).format('YYYY-MM-DD'));\r\n\t\t\t\tconst newSeries_0 = res.data.mediaRealArr;\r\n\t\t\t\tconst newSeries_1 = res.data.mediaRouteArr;\r\n\t\t\t\tconst updatedSeries = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t\tconst updatedOptions = {\r\n\t\t\t\t\t...chartData.options,\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t...chartData.options.xaxis,\r\n\t\t\t\t\t\tcategories: newCat\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedChartData = {\r\n\t\t\t\t\toptions: updatedOptions,\r\n\t\t\t\t\tseries: updatedSeries\r\n\t\t\t\t};\r\n\t\t\t\tsetChartData(updatedChartData);\r\n\t\t\t\tsetActiveDriver(res.data._id)\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(false);\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(true);\r\n\t\t\t})\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allActiveDrivers.length) {\r\n\t\t\tsetActiveDriversArr(allActiveDrivers.map(driver => {\r\n\t\t\t\treturn (<Option\r\n\t\t\t\t\tvalue={driver._id}\r\n\t\t\t\t\tkey={driver._id}>\r\n\t\t\t\t\t{driver.driverName}\r\n\t\t\t\t</Option>)\r\n\t\t\t}));\r\n\t\t\tgetDriver(allActiveDrivers[0]._id)\r\n\t\t}\r\n\t\telse { setLoading(false); setNoData(true) }\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst updatedSeries = [\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaReal\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaRoute\r\n\t\t\t}\r\n\t\t];\r\n\t\tsetChartData({\r\n\t\t\toptions: chartData.options,\r\n\t\t\tseries: updatedSeries\r\n\t\t})\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.chartText])\r\n\r\n\treturn (\r\n\t\tloading ? <Spin tip=\"Loading...\"></Spin> :\r\n\t\tnoData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n\t\t<>\r\n\t\t\t<div style={{ textAlign: 'left' }}>\r\n\t\t\t\t<span style={{ marginRight: 30 }}>{props.chartText.selectDriver}</span>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={activeDriver}\r\n\t\t\t\t\tstyle={{ width: 280 }}\r\n\t\t\t\t\tonChange={(value) => getDriver(value)}>\r\n\t\t\t\t\t{activeDriversArr}\r\n\t\t\t\t</Select>\r\n\t\t\t</div>\r\n\t\t\t<ApexChart\r\n\t\t\t\toptions={chartData.options}\r\n\t\t\t\tseries={chartData.series}\r\n\t\t\t\ttype=\"area\"\r\n\t\t\t\theight=\"300\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneDriverChart\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(OneDriverChart);","import React from 'react';\r\nimport classes from './Drivers.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse } from 'antd';\r\nimport OneDriverChart from '../../../../Containers/Owner/Charts/DriversCharts/OneDriverChart';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass DriverOne extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\texpandIconPosition=\"right\">\r\n\t\t\t\t\t<Panel header={this.props.chartText.title} key=\"1\">\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<OneDriverChart />\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneDriverChart,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(DriverOne);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst FuelChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Trucks-Fuel-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                offsetX: 300,\r\n                style: {\r\n                    fontSize: '12px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {\r\n                min:20,\r\n                labels: {\r\n                    trim: false,\r\n                    axisTicks: {\r\n                        show: true,\r\n                        borderType: 'solid',\r\n                        color: '#78909C',\r\n                        height: 6,\r\n                        offsetX: 0,\r\n                        offsetY: 0\r\n                    }\r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },        \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipFuel,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=mediaReal`);\r\n        setLoading(true);\r\n        axios.get(`/system/trucksFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data._id\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setNoData(true)\r\n        })\r\n    }\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.truckCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FuelChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport FuelChart from '../../../../Containers/Owner/Charts/TrucksCharts/FuelChart';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass TrucksFuel extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  };\r\n\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleFuel} key=\"1\">\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <FuelChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionFuel}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.truckCharts,\r\n    language: state.initLang.language\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(TrucksFuel);","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\n\r\nconst EfficencyChart = props => {   \r\n    const [noData, setNoData] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const [chartData, setChartData] = useState({\r\n        options: {\r\n            chart: {\r\n                id: \"Trucks-Efficency-Chart\"\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            yaxis: {                \r\n                labels: {\r\n                    maxWidth: 360                  \r\n                }\r\n            },            \r\n            xaxis: {\r\n                labels: {\r\n                    \"formatter\": function (val) {\r\n                        return val.toFixed(2)\r\n                    },\r\n                    trim: false                    \r\n                },\r\n                categories: []\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        }, \r\n        series: [\r\n            {\r\n                name: props.chartText.chartTooltipEfficiency,\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    useEffect(() => {\r\n        getData(props.dateFrom, props.dateEnd)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dateFrom, props.dateEnd])\r\n\r\n    const getData = () => {\r\n        const urlData = encodeURI(\r\n            `from=${props.dateFrom}&end=${props.dateEnd}&param=ratio`);\r\n        setLoading(true);\r\n        axios.get(`/system/trucksFuelEfficiency?${urlData}`)\r\n        .then((res) => {\r\n            if(!res.data.length) {\r\n                setLoading(false);\r\n                setNoData(true);                \r\n                return;\r\n            }\r\n            const newCat = res.data.map(data => {\r\n                return data._id\r\n            })\r\n            const newSeries = res.data.map(data => {\r\n                return data.realAvg.toFixed(2)\r\n            })\r\n            const updatedSeries = [{\r\n                ...chartData.series[0],\r\n                data: newSeries\r\n            }]\r\n            const updatedOptions = {\r\n                ...chartData.options,\r\n                xaxis: {\r\n                    ...chartData.options.xaxis,\r\n                    categories: newCat\r\n                }\r\n            }\r\n            const updatedChartData = {\r\n                options: updatedOptions,\r\n                series: updatedSeries\r\n            }\r\n            setChartData(updatedChartData);\r\n            setLoading(false);\r\n            setNoData(false);\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setNoData(true)\r\n        })\r\n    };\r\n    return (\r\n        loading ? <Spin tip=\"Loading...\"></Spin> :\r\n        noData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n        <ApexChart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height={chartData.options.xaxis.categories.length * 25 + 100}           \r\n        />\r\n    );    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartText: state.initLang.textOwner.driverCharts\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(EfficencyChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\n// import  'moment/locale/es';\r\nimport EfficiencyChart from '../../../../Containers/Owner/Charts/TrucksCharts/EfficiencyChart';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass TruksEfficiency extends React.Component {\r\n  \r\n  state = {\r\n    dateFrom: moment().startOf('month').subtract(1, 'month'),\r\n    dateEnd: moment()\r\n  };\r\n\r\n  onDateChange = (dates, dateStrings) => {    \r\n    this.setState(prevState => {\r\n      return {\r\n        dateFrom: new Date(dateStrings[0]).getTime(),\r\n        dateEnd: new Date(dateStrings[1]).getTime()\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <div className={classes.Fuel}>\r\n        <Collapse\r\n          defaultActiveKey={['1']}\r\n          // onChange={callback}\r\n          expandIconPosition=\"right\"\r\n        >\r\n          <Panel header={this.props.chartText.titleEfficiency} key=\"1\">\r\n            <span style={{marginRight: 10}}>{this.props.chartText.dateChoice}</span>           \r\n            <RangePicker\r\n              locale={this.props.language === 'es' ? locale_es : locale_pl}\r\n              allowClear = {false}\r\n              defaultValue={[moment().startOf('month').subtract(1, 'month'),\r\n                moment()]}\r\n              ranges={{\r\n                [this.props.chartText.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                [this.props.chartText.lastMonth]: \r\n                [moment().startOf('month').subtract(1, 'month'),\r\n                  moment().startOf('month').subtract(1, 'day')]\r\n              }}\r\n              onChange={this.onDateChange}\r\n            />\r\n            <div className={classes.FuelChart}>\r\n              <EfficiencyChart \r\n                dateFrom={new Date(this.state.dateFrom).getTime()}\r\n                dateEnd={new Date(this.state.dateEnd).getTime()}\r\n              />\r\n              <p>{this.props.chartText.descriptionEfficiency}</p>\r\n            </div>\r\n          </Panel>          \r\n        </Collapse>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chartText: state.initLang.textOwner.truckCharts,\r\n    language: state.initLang.language\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(TruksEfficiency);","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ApexChart from '../../../../Components/UI/Charts/ApexChart';\r\nimport axios from 'axios';\r\nimport { Spin, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport ChartsContext from '../../../../context/charts-context';\r\nconst { Option } = Select;\r\n\r\nconst OneTruckChart = props => {\r\n\r\n\tconst [chartData, setChartData] = useState(\r\n\t\t{\r\n\t\t\toptions: {\r\n\t\t\t\tdataLabels: {\r\n\t\t\t\t\tenabled: false\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\toffsetY: -10\r\n\t\t\t\t},\r\n\t\t\t\tstroke: {\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\tcolors: ['red', 'blue'],\r\n\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\ttype: 'datetime',\r\n\t\t\t\t\tcategories: [],\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\tformat: 'dd/MM/yy'\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tname: props.chartText.mediaReal,\r\n\t\t\t\tdata: []\r\n\t\t\t}, {\r\n\t\t\t\tname: props.chartText.mediaRoute,\r\n\t\t\t\tdata: []\r\n\t\t\t}],\t\t\t\r\n\t\t\tloading: false,\r\n\t\t\tnoData: true\r\n\t\t}\r\n\t);\r\n\r\n\tconst { allActiveTrucks } = useContext(ChartsContext);\r\n\tconst [noData, setNoData] = useState(true);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [activeTrucksArr, setActiveTrucksArr] = useState([]);\r\n\tconst [activeTruck, setActiveTruck] = useState(null);\r\n\r\n\tconst getTruck = (truckId) => {\r\n\t\tsetLoading(true);\r\n\t\taxios.get('/system/oneTruckData?truckId=' + truckId)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res.data) {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetNoData(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t\tconst newCat = res.data.datesArr.map(elem => moment(elem).format('YYYY-MM-DD'));\r\n\t\t\t\tconst newSeries_0 = res.data.mediaRealArr;\r\n\t\t\t\tconst newSeries_1 = res.data.mediaRouteArr;\r\n\t\t\t\tconst updatedSeries = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata: newSeries_1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t\tconst updatedOptions = {\r\n\t\t\t\t\t...chartData.options,\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t...chartData.options.xaxis,\r\n\t\t\t\t\t\tcategories: newCat\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedChartData = {\r\n\t\t\t\t\toptions: updatedOptions,\r\n\t\t\t\t\tseries: updatedSeries\r\n\t\t\t\t};\r\n\t\t\t\tsetChartData(updatedChartData);\r\n\t\t\t\tsetActiveTruck(res.data._id)\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(false);\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetNoData(true);\r\n\t\t\t})\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allActiveTrucks.length) {\r\n\t\t\tsetActiveTrucksArr(allActiveTrucks.map(truck => {\r\n\t\t\t\treturn (<Option\r\n\t\t\t\t\tvalue={truck._id}\r\n\t\t\t\t\tkey={truck._id}>\r\n\t\t\t\t\t{truck._id}\r\n\t\t\t\t</Option>)\r\n\t\t\t}));\r\n\t\t\tgetTruck(allActiveTrucks[0]._id)\r\n\t\t}\r\n\t\telse { setLoading(false); setNoData(true) }\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst updatedSeries = [\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[0],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaReal\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t...chartData.series[1],\t\t\t\t\t\t\r\n\t\t\t\tname: props.chartText.mediaRoute\r\n\t\t\t}\r\n\t\t];\r\n\t\tsetChartData({\r\n\t\t\toptions: chartData.options,\r\n\t\t\tseries: updatedSeries\r\n\t\t})\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.chartText]);\r\n\r\n\treturn (\r\n\t\tloading ? <Spin tip=\"Loading...\"></Spin> :\r\n\t\tnoData ? <h4 style={{color: '#007bff'}}>{props.chartText.noData}</h4> :\r\n\t\t<>\r\n\t\t\t<div style={{ textAlign: 'left' }}>\r\n\t\t\t\t<span style={{ marginRight: 30 }}>{props.chartText.selectTruck}</span>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tdefaultValue={activeTruck}\r\n\t\t\t\t\tstyle={{ width: 280 }}\r\n\t\t\t\t\tonChange={(value) => getTruck(value)}>\r\n\t\t\t\t\t{activeTrucksArr}\r\n\t\t\t\t</Select>\r\n\t\t\t</div>\r\n\t\t\t<ApexChart\r\n\t\t\t\toptions={chartData.options}\r\n\t\t\t\tseries={chartData.series}\r\n\t\t\t\ttype=\"area\"\r\n\t\t\t\theight=\"300\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneTruckChart\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(OneTruckChart);","import React from 'react';\r\nimport classes from './Trucks.css';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse } from 'antd';\r\nimport OneTruckChart from '../../../../Containers/Owner/Charts/TrucksCharts/OneTruckChart';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass TruckOne extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Fuel}>\r\n\t\t\t\t<Collapse\r\n\t\t\t\t\tdefaultActiveKey={['1']}\r\n\t\t\t\t\texpandIconPosition=\"right\">\r\n\t\t\t\t\t<Panel header={this.props.chartText.title} key=\"1\">\r\n\t\t\t\t\t\t<div className={classes.FuelChart}>\r\n\t\t\t\t\t\t\t<OneTruckChart />\r\n\t\t\t\t\t\t\t<p>{this.props.chartText.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tchartText: state.initLang.textOwner.oneTruckChart,\r\n\t\tlanguage: state.initLang.language\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(TruckOne);","import React, { useEffect, useState } from 'react';\r\nimport * as actions from '../../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Select, DatePicker } from 'antd';\r\nimport locale_es from 'antd/lib/date-picker/locale/es_ES';\r\nimport locale_pl from 'antd/lib/date-picker/locale/pl_PL';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst RoutesTableData = props => {\r\n    \r\n    const [activeTrucksArr, setActiveTrucksArr] = useState([]);\r\n    const [truckId, setTruckId] = useState(null);\r\n    const [from, setFrom] = useState(new Date(moment().startOf('month').subtract(1, 'month')).getTime());\r\n    const [end, setEnd] = useState(new Date(moment()).getTime());\r\n\r\n    useEffect(() => {\r\n        Axios.get('/system/allTrucks')\r\n        .then(res => {\r\n            if (res.data.length) {\r\n                setActiveTrucksArr(res.data.map(truck => {\r\n                    if(!truck.routesLength) return null;\r\n                    return (<Option\r\n                        value={truck._id}\r\n                        key={truck._id}>\r\n                        {truck._id}\r\n                    </Option>)\r\n                }));\r\n            }\r\n        })\r\n        .catch(e => console.log(e.message.data))\r\n        \r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const changeTruckHandler = truckId => {\r\n        setTruckId(truckId);\r\n        props.getTruck(truckId, from, end)\r\n    };\r\n\r\n    const changeDatesHandler = (dates, dateStrings) => {\r\n        const fromPicker = new Date(dateStrings[0]).getTime();\r\n        const endPicker = new Date(dateStrings[1]).getTime()       \r\n        setFrom(fromPicker);\r\n        setEnd( endPicker);\r\n        props.getTruck(truckId, fromPicker, endPicker)\r\n    };\r\n\r\n    return (\r\n        <>  \r\n            <span>{ props.text.selectTruck }</span>\r\n            <Select\r\n                defaultValue=\"--------------------------------------\"\r\n                style={{ width: 280, margin: 15 }}\r\n                onChange={(value) => changeTruckHandler(value)}>\r\n                {activeTrucksArr}\r\n            </Select>\r\n            <span style={{margin:'0 15px'}}>{ props.text.dateChoice }</span>\r\n            <RangePicker\r\n                locale={props.language === 'es' ? locale_es : locale_pl}\r\n                allowClear={false}\r\n                disabled={!truckId}\r\n                defaultValue={[\r\n                    moment().startOf('month').subtract(1, 'month'),\r\n                    moment()\r\n                ]}\r\n                ranges={{\r\n                    [props.text.thisMonth]: [moment().startOf('month'), moment().endOf('month')],\r\n                    [props.text.lastMonth]:\r\n                        [moment().startOf('month').subtract(1, 'month'),\r\n                        moment().startOf('month').subtract(1, 'day')]\r\n                }}\r\n                onChange={changeDatesHandler}\r\n            />\r\n        </>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        text: state.initLang.textOwner.routes,\r\n        language: state.initLang.textHome.language\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTruck: (truckId, from, end) => dispatch(actions.truckRoutesProcess(truckId, from, end))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutesTableData);\r\n\r\n","import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport ChartsContext from '../../../../context/charts-context';\r\nimport RoutesTableData from '../../../../Containers/Owner/RoutesTableData/RoutesTableData';\r\nimport { Table, Button, Icon } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst RouteTable = props => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst componentRef = useRef();\r\n\tconst { allActiveDrivers } = useContext(ChartsContext);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (props.routes !== undefined && props.routes.length) {\r\n\t\t\tconst routesSorted = props.routes.sort((prev, next) => {\r\n\t\t\t\treturn next._id - prev._id\r\n\t\t\t});\t\t\t\r\n\t\t\tsetData(\r\n\t\t\t\troutesSorted.map(route => {\r\n\t\t\t\t\tconst driver = allActiveDrivers.find(driver => {\r\n\t\t\t\t\t\treturn driver._id === route.driverId\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlet driverId = ''\r\n\t\t\t\t\tif(driver) driverId = driver.driverName\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...route,\r\n\t\t\t\t\t\tdriverId ,\r\n\t\t\t\t\t\tdtStop: (new Date(route.dtStop)).toLocaleDateString(),\r\n\t\t\t\t\t\ttype: checkAction(route.type),\r\n\t\t\t\t\t\tfull: route.full ? props.text.yes : route.type === 3 ? props.text.no : '-',\r\n\t\t\t\t\t\ttonIn: route.type === 1 ? route.tonOut + ' t.': '-',\r\n\t\t\t\t\t\ttonOut: route.type === 2 ? (route.tonIn - route.tonOut) + ' t.' : '-',\r\n\t\t\t\t\t\tkey: route['_id'],\r\n\t\t\t\t\t\tlitres: route.type === 3 ? route.litres + ' l.': '-',\r\n\t\t\t\t\t\tcomments: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetData([]);\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [props.routes, props.text]);\r\n\t\r\n\tconst checkAction = (val) => {\r\n\t\tswitch (val) {\r\n\t\t\tcase (1): return props.text.loading;\r\n\t\t\tcase (2): return props.text.unloading;\r\n\t\t\tcase (3): return props.text.fuel;\r\n\t\t\tcase (4): return props.text.periodEnd;\r\n\t\t\tcase (5): return props.text.driversChange;\r\n\t\t\tdefault: return ''\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: props.text.date,\r\n\t\t\tdataIndex: 'dtStop',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.driver,\r\n\t\t\tdataIndex: 'driverId',\r\n\t\t\twidth: 250,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.action,\r\n\t\t\tdataIndex: 'type',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.country,\r\n\t\t\tdataIndex: 'country',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.zip,\r\n\t\t\tdataIndex: 'postal',\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.loading,\r\n\t\t\tdataIndex: 'tonIn',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.unloading,\r\n\t\t\tdataIndex: 'tonOut',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.fuel,\r\n\t\t\tdataIndex: 'litres',\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.full,\r\n\t\t\tdataIndex: 'full',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.count,\r\n\t\t\tdataIndex: 'kmStop',\r\n\t\t\twidth: 90,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: props.text.comments,\r\n\t\t\tdataIndex: 'comments'\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div style={{margin: 30}} ref={componentRef}>\r\n\t\t\t<Table\t\t\t\r\n\t\t\tcolumns={columns}\r\n\t\t\tdataSource={data}\r\n\t\t\tbordered\r\n\t\t\tloading={props.isLoading}\r\n\t\t\tsize=\"middle\"\r\n\t\t\tpagination={false}\r\n\t\t\ttitle={() => (\r\n\t\t\t\t<div style={{display:'flex', justifyContent:'space-between'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<RoutesTableData />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ReactToPrint\r\n                    \ttrigger={() => <Button><Icon type=\"printer\" /></Button>}\r\n                    \tcontent={() => componentRef.current}\r\n               \t\t/>\r\n\t\t\t\t</div>\t\r\n\t\t\t)}\r\n\t\t\tfooter={() => props.text.registration + ' ' + (props.truckId ? props.truckId: \"\")}\r\n\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\troutes: state.truckRoutes.truckRoutes,\r\n\t\tisLoading: state.truckRoutes.isLoading,\r\n\t\ttruckId: state.truckRoutes.truckId,\r\n\t\ttext: state.initLang.textOwner.routes\r\n\t}\r\n};\r\nexport default connect(mapStateToProps)(RouteTable);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DriversFuel from './Drivers/DriversFuel';\r\nimport DriversEfficiency from './Drivers/DriversEfficiency';\r\nimport DriverOne from './Drivers/DriverOne';\r\nimport TrucksFuel from './Trucks/TrucksFuel';\r\nimport TrucksEfficiency from './Trucks/TrucksEfficiency';\r\nimport TruckOne from './Trucks/TruckOne';\r\nimport RoutesTable from './RoutesTable/RoutesTable';\r\nimport { Divider } from 'antd';\r\n\r\nconst Inside = props => (\r\n\t<div className= 'container-fluid mx-auto p-5' style={{height: '92vh', overflowY: 'scroll'}}>\r\n\t\t<Divider>{props.titleText.driversTitle}</Divider>\r\n\t\t<div className=\"row mx-auto\">\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<DriversFuel />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<DriversEfficiency />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row mx-auto pt-5 mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<DriverOne />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t<Divider>{props.titleText.trucksTitle}</Divider>\r\n\t\t<div className=\"row mx-auto mt-4\">\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<TrucksFuel />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-12 col-lg-6 d-flex justify-content-center\">\r\n\t\t\t\t<TrucksEfficiency />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row mx-auto pt-5 mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<TruckOne />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t<Divider>{props.titleText.routesTitle}</Divider>\r\n\t\t<div className=\"row mx-auto mb-5\">\r\n\t\t\t<div className=\"col-xs-12 col-sm-12 mx-auto\">\r\n\t\t\t\t<RoutesTable />\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n);\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttitleText : state.initLang.textOwner.inside\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(Inside);","import React, { useRef } from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, Icon } from 'antd';\r\n\r\nconst PhoneInstruction = props => {\r\n    const componentRef = useRef();\r\n    return (\r\n        \r\n        <Modal\r\n            visible={props.visible}\r\n            title={props.instrText.title}\r\n            width='50vw'\r\n            onCancel={() => props.onClose()}\r\n            footer={[\r\n                <ReactToPrint\r\n                    trigger={() => <Button><Icon type=\"printer\" /></Button>}\r\n                    content={() => componentRef.current}\r\n                />,\r\n                <Button key=\"back\" onClick={() => props.onClose()}>\r\n                    OK\r\n                </Button>  \r\n            ]}>\r\n            <div ref={componentRef} style={{margin: 30}}>\r\n                <h5>{props.instrText.driver +': ' + props.name + ' ' + props.lastName}</h5>\r\n                <h6>{props.instrText.id + ' ' + props.id}</h6>\r\n                <hr></hr>\r\n                <div dangerouslySetInnerHTML={{__html: props.instrText.instruction}}></div>\r\n            </div>            \r\n        </Modal>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instrText: state.initLang.textOwner.driverInstruction\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(PhoneInstruction);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Driver } from './driverModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsFormText, cancelForm } from '../../../shared/utility';\r\nimport DriverInstruction from '../../../Components/Owner/Instructions/DriverInstruction';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddDriver = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.driversText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            placeholder: props.driversText.lastName,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        document: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.driversText.document,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddDriver, setShowAddDriver } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [showInstruction, setShowInstruction] = useState(false);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.driversText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.driversText]);\r\n    \r\n    const submitHandler = () => {        \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const driver = new Driver(\r\n            {\r\n                id: controls.document.value.toLowerCase().trim(),\r\n                Driver: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    date: (new Date()).getTime(),\r\n                    routes: []\r\n                }\r\n            }\r\n        );        \r\n        driver.addDriver(setSuccesMsg, setShowInstruction, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = () => {        \r\n        cancelForm(controls, formElementsKeyArray, setControls);        \r\n        setShowAddDriver(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setShowInstruction(false);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.driversText.addPanelName}</h6>\r\n            <form  style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    type=\"button\"\r\n                    disabled={!formIsValid || isLoading}\r\n                    onClick={submitHandler}\r\n                    style={{ margin: '1rem' }}>\r\n                    {props.driversText ? props.driversText.submit : null}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        successMsg ?\r\n        <DriverInstruction \r\n            visible={showInstruction}\r\n            onClose={cancelHandler}\r\n            name= {successMsg.name}\r\n            lastName= {successMsg.lastName}\r\n            id={successMsg.id}>\r\n        </DriverInstruction> :\r\n        <Drawer\r\n            visible={showAddDriver}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                        <h6 style={{color: 'red'}}>{\r\n                            props.errorText[errorMsg] ? \r\n                            props.errorText[errorMsg] : \r\n                            props.driversText.addDriverError\r\n                        }</h6>\r\n                    </div> :\r\n                    isLoading ? <Spinner /> :\r\n                        formElement\r\n            }\r\n            <button\r\n                onClick={cancelHandler}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.driversText ? props.driversText.cancel : null}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        driversText: state.initLang.textOwner.driversForm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddDriver)","import axios from 'axios';\r\nexport class Truck {\r\n    constructor({ id, Truck, newData, date }) {\r\n        this.truckData = {\r\n            id,\r\n            Truck,\r\n            newData,\r\n            date\r\n        }\r\n    };    \r\n    addTruck(success, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('/system/addTruck', this.truckData)\r\n            .then(res => { success(res.data); isLoading(false); })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    updateTruck(success, error, isLoading, getTrucks) {\r\n        isLoading(true);\r\n        axios.put('/system/update', this.truckData)\r\n            .then(res => { success(res.data); isLoading(false); getTrucks() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    deleteTruck(success, error, isLoading, getTrucks) {\r\n        isLoading(true);\r\n        axios.delete('/system/update', {data: this.truckData} )\r\n            .then(res => { success(res.data); isLoading(false); getTrucks() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    theft(success, error, isLoading) {\r\n        isLoading(true);\r\n        axios.put('/system/theft',  this.truckData )\r\n            .then(res => { success(res.data); isLoading(false) })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n}; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Truck } from './truckModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsLabelText, cancelForm } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddTruck = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            label: props.trucksText.name,\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        consum: {\r\n            elementType: 'input',\r\n            label: props.trucksText.consum,\r\n            elementConfig: {\r\n                type: 'number'\r\n            },\r\n            value: 24,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 2\r\n            },\r\n            valid: true,\r\n            touched: true\r\n        },\r\n        norm: {\r\n            elementType: 'input',\r\n            label: props.trucksText.norm,\r\n            elementConfig: {               \r\n                type: 'number',\r\n                step: 0.1\r\n            },\r\n            value: 0.4,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 4\r\n            },\r\n            valid: true,\r\n            touched: true\r\n        },\r\n        id: {\r\n            elementType: 'input',\r\n            label: props.trucksText.id,\r\n            elementConfig: {               \r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddTruck, setShowAddTruck } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsLabelText(controls, formElementsKeyArray, props.trucksText, setControls);\r\n        // eslint-disable-next-line\r\n    }, [props.trucksText]);\r\n    \r\n    const submitHandler = () => {        \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck(\r\n            {\r\n                id: controls.id.value.toUpperCase().trim(),\r\n                Truck: {\r\n                    name: controls.name.value.trim(),\r\n                    consum: Number(controls.consum.value),\r\n                    norm: Number(controls.norm.value),\r\n                    date: (new Date()).getTime(),\r\n                    fuel: [],\r\n                    routes: [],\r\n                    paid: (new Date()).getTime() + 3456000000\r\n                }\r\n            }\r\n        );        \r\n        truck.addTruck(setSuccesMsg, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = () => {       \r\n        cancelForm(controls, formElementsKeyArray, setControls);       \r\n        setShowAddTruck(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.trucksText.addPanelName}</h6>\r\n            <form  style={{display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    type=\"button\"\r\n                    disabled={!formIsValid || isLoading}\r\n                    onClick={submitHandler}\r\n                    style={{ margin: '1rem' }}>\r\n                    {props.trucksText ? props.trucksText.submit : null}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        <Drawer\r\n            visible={showAddTruck}\r\n            placement=\"left\"\r\n            closable={false}\r\n            style={{ textAlign: 'center' }}\r\n            width='auto'\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.trucksText.addTruckSuccess}</h5>\r\n                        <h6>{successMsg}</h6>                        \r\n                    </div> :\r\n                    errorMsg ?\r\n                        <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ?\r\n                                props.errorText[errorMsg] : \r\n                                props.trucksText.addTruckError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n\r\n            <button\r\n                onClick={cancelHandler}\r\n                style={{margin: 'auto'}}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.trucksText ? props.trucksText.cancel : null}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {    \r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        trucksText: state.initLang.textOwner.trucksForm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddTruck)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Truck } from './truckModel';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, changeInputsLabelText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Select, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst EditTruck = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            label: props.trucksText.name,\r\n            elementConfig: {\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        consum: {\r\n            elementType: 'input',\r\n            label: props.trucksText.consum,\r\n            elementConfig: {\r\n                type: 'number'\r\n            },\r\n            value: 0,\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 2\r\n            },\r\n            valid: true,\r\n            touched: false\r\n        },\r\n        norm: {\r\n            elementType: 'input',\r\n            label: props.trucksText.norm,\r\n            elementConfig: {               \r\n                type: 'number',\r\n                step: 0.1\r\n            },\r\n            value: 0,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 4\r\n            },\r\n            valid: true,\r\n            touched: false\r\n        },\r\n        _id: {\r\n            elementType: 'input',\r\n            label: props.trucksText.id,\r\n            elementConfig: {               \r\n                type: 'text',\r\n                disabled: true\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditTruck, setShowEditTruck } = useContext(MenuContext);\r\n    const [allTrucks, setAllTrucks] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    let options = <Option></Option>;\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getTrucks = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/system/allTrucks')\r\n            .then(res => { setAllTrucks(res.data); setIsLoading(false) })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e) })\r\n    };\r\n    useEffect(() => {\r\n        if(showEditTruck) getTrucks();\r\n    }, [showEditTruck]);    \r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsLabelText(controls, formElementsKeyArray, props.trucksText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.trucksText]);\r\n\r\n    const setTruck = val => {\r\n        const actualTruck = allTrucks.find(elem => elem._id === val);\r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = actualTruck[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const submitHandler = () => {        \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck(\r\n            {\r\n                id: controls._id.value.toUpperCase().trim(),\r\n                newData: {\r\n                    'Truck.name': controls.name.value.trim(),\r\n                    'Truck.consum': Number(controls.consum.value),\r\n                    'Truck.norm': Number(controls.norm.value)\r\n                }\r\n            }\r\n        );\r\n        truck.updateTruck(setSuccesMsg, setErrorMsg, setIsLoading, getTrucks);\r\n    };\r\n    const deleteHandler = () => {       \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck({\r\n            id: controls._id.value.toUpperCase().trim()\r\n        });\r\n        confirm({\r\n            title: controls._id.value,\r\n            content: props.trucksText.deleteConfirm,\r\n            onOk() {\r\n                truck.deleteTruck(setSuccesMsg, setErrorMsg, setIsLoading, getTrucks);\r\n            },\r\n            onCancel() { return }\r\n        });\r\n    };\r\n    const cancelHandler = () => {        \r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditTruck(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    if (allTrucks.length) {\r\n        options = allTrucks.map(truck => {\r\n            return <Option value={truck._id} key={truck._id}>\r\n                {truck._id}\r\n            </Option>\r\n        })\r\n    };\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.trucksText.editPanelName}</h6>\r\n            <p>{props.trucksText.choiceTruck}</p>\r\n            <Select\r\n                style={{ width: \"100%\" }}\r\n                onChange={(value) => setTruck(value)}\r\n                defaultValue={props.textMenu.trucks}>\r\n                {options}\r\n            </Select>\r\n            <form style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <Button\r\n                    disabled={!formIsValid || isLoading}\r\n                    onClick={submitHandler}\r\n                >\r\n                    {props.trucksText ? props.trucksText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type='danger'\r\n                    disabled={!formIsValid || isLoading}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={deleteHandler}\r\n                >\r\n                    {props.trucksText ? props.trucksText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditTruck}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allTrucks.length ? \r\n                <h6 style={{margin: 20, color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                    {props.trucksText.noTrucks}\r\n                </h6> :\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.trucksText.editTruckSuccess}</h5>\r\n                        <h6>{successMsg}</h6>\r\n                    </div> :\r\n                    errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.trucksText.addTruckError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.trucksText ? props.trucksText.cancel : ''}\r\n            </Button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        trucksText: state.initLang.textOwner.trucksForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditTruck)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport ChartsContext from '../../../context/charts-context';\r\nimport { Truck } from './truckModel';\r\nimport { Drawer, Select, Button, DatePicker  } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nconst { Option } = Select;\r\n\r\nconst EditTruck = props => {\r\n\r\n    const { showTheft, setShowTheft } = useContext(MenuContext);\r\n    const {allActiveTrucks, getActiveTrucks} = useContext(ChartsContext);\r\n    const [activeTrucksArr, setActiveTrucksArr] = useState([]);\r\n    const [activeTruck, setActiveTruck] = useState(null);\r\n    const [theftDate, setTheftDate] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);   \r\n    \r\n\r\n    useEffect(() => {\r\n\t\tif (allActiveTrucks.length) {\r\n\t\t\tsetActiveTrucksArr(allActiveTrucks.map(truck => {\r\n\t\t\t\treturn (<Option\r\n\t\t\t\t\tvalue={truck._id}\r\n\t\t\t\t\tkey={truck._id}>\r\n\t\t\t\t\t{truck._id}\r\n\t\t\t\t</Option>)\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t}\t\t\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\t\r\n    \r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const truck = new Truck(\r\n            {\r\n               id: activeTruck,\r\n               date: theftDate\r\n            }\r\n        );\r\n        truck.theft(setSuccesMsg, setErrorMsg, setIsLoading);\r\n    };\r\n    \r\n    const cancelHandler = () => {\r\n        if(successMsg) {getActiveTrucks()}  \r\n        setShowTheft(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.trucksText.theftPanelName}</h6>\r\n            <p>{props.trucksText.theftPanelDescription}</p>\r\n            <p>{props.trucksText.choiceTheftData}</p>\r\n            \r\n            <form style={{ display: \"inline\", textAlign: 'center' }}>\r\n                <Select\r\n                    style={{ width: 240, margin: '20px 0'}}\r\n                    onChange={value => setActiveTruck(value)}\r\n                    defaultValue='-------------------------------'>\r\n                    {activeTrucksArr}\r\n                </Select>\r\n                <br></br>         \r\n                <DatePicker\r\n                style={{ width: 240, marginBottom: 35}}\r\n                onChange={date => setTheftDate((date._d).getTime())} />\r\n                <br></br>\r\n                <Button\r\n                    style={{marginRight: 20}}\r\n                    disabled={!activeTruck || !theftDate || isLoading}\r\n                    onClick={submitHandler}\r\n                >\r\n                    {props.trucksText ? props.trucksText.theftSubmit : ''}\r\n                </Button>                \r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showTheft}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allActiveTrucks.length ? \r\n                <h6 style={{margin: 20, color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                    {props.trucksText.noTrucks}\r\n                </h6> :\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.trucksText.theftSuccess}</h5>\r\n                        <h6>{successMsg}</h6>\r\n                    </div> :\r\n                    errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.trucksText.theftError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.trucksText ? props.trucksText.cancel : ''}\r\n            </Button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        trucksText: state.initLang.textOwner.trucksForm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditTruck)","import axios from 'axios';\r\nexport class Worker {\r\n    constructor({ id, dataSet, newData }) {\r\n        this.workerData = {\r\n            id,\r\n            dataSet,\r\n            newData\r\n        }\r\n    };    \r\n    addWorker(success, error, isLoading) {\r\n        isLoading(true);\r\n        axios.post('api/workers/addWorker', this.workerData)\r\n            .then(res => { success(res.data); isLoading(false); })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    updateWorker(success, error, isLoading, getWorkers) {\r\n        isLoading(true);\r\n        axios.put('/api/workers/editWorker', this.workerData)\r\n            .then(res => { success(res.data); isLoading(false); getWorkers() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n    deleteWorker(success, error, isLoading, getWorkers) {\r\n        isLoading(true);\r\n        axios.delete('/api/workers/delWorker', {data: this.workerData} )\r\n            .then(res => { success(res.data); isLoading(false); getWorkers() })\r\n            .catch(e => { error(e.response.data.toString()); isLoading(false) });\r\n    };\r\n}; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Worker } from './workerModel';\r\nimport { inputChangedHandler, validFormHandler, changeInputsFormText, cancelForm, checkIdentity } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport { Drawer } from 'antd';\r\n\r\nconst AddWorker = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.workerText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.workerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n    const { showAddWorker, setShowAddWorker } = useContext(MenuContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [notIdentity, setNotIdentity] = useState(null);\r\n\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n        if(notIdentity) setNotIdentity(null)\r\n        // eslint-disable-next-line\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.workerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.workerText]);\r\n\r\n    const checkIdentityHandler = () => {        \r\n        if(!checkIdentity(controls.email.value, controls.email2.value)) {\r\n            setFormIsValid(false);\r\n            setNotIdentity('email');\r\n            return;\r\n        }\r\n        else {\r\n            if(!checkIdentity(controls.password.value, controls.password2.value)) {\r\n                setFormIsValid(false);\r\n                setNotIdentity('password');\r\n                return;\r\n            }\r\n        };\r\n        submitHandler()\r\n    };\r\n\r\n    const submitHandler = () => {\r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker(\r\n            {\r\n                dataSet: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    email: controls.email.value.trim(),\r\n                    password: controls.password.value.trim()\r\n                }\r\n            }\r\n        );\r\n        worker.addWorker(setSuccesMsg, setErrorMsg, setIsLoading);\r\n    };\r\n    const cancelHandler = () => {        \r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowAddWorker(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6 style={{marginBottom: '2rem'}}>{props.workerText.addPanelName}</h6>\r\n            <p>{props.workerText.restrictionText}</p>\r\n            <p>{props.workerText.addPanelDescripton}</p>\r\n            <form  style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <p style={{color: 'red'}}>{\r\n                    notIdentity === 'email' ?\r\n                    props.registerText.emailNotIdentity :\r\n                    notIdentity === 'password' ?\r\n                    props.registerText.passwordNotIdentity :\r\n                    null\r\n                }</p>\r\n                <button\r\n                    className='btn btn-primary btn-sm'\r\n                    type=\"button\"\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    onClick={checkIdentityHandler}\r\n                    style={{ marginRight: '1rem' }}>\r\n                    {props.workerText ? props.workerText.submit : ''}\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n    return (\r\n        <Drawer\r\n            visible={showAddWorker}\r\n            placement=\"left\"\r\n            closable={false}\r\n            style={{ textAlign: 'center' }}\r\n            width='auto'\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.workerText.addWorkerSuccess}</h5>\r\n                        <h6>{successMsg}</h6>\r\n                    </div> :\r\n                    errorMsg ?\r\n                        <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.workerText.addWorkerError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n\r\n            <button\r\n                onClick={cancelHandler}\r\n                style={{ margin: 'auto' }}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.workerText ? props.workerText.cancel : ''}\r\n            </button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        registerText: state.initLang.textHome.registerForm,\r\n        workerText: state.initLang.textOwner.workerForm,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(AddWorker)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Worker } from './workerModel';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, changeInputsFormText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Select, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst EditWorker = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: props.workerText.name,\r\n                type: 'text'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.workerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.workerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.workerText.password3\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditWorker, setShowEditWorker } = useContext(MenuContext);\r\n    const [allWorkers, setAllWorkers] = useState([]);\r\n    const [workerCurrentEmail, setWorkerCurrentEmail] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    let options = <Option></Option>;\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getWorkers = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/api/workers/getWorkers')\r\n            .then(res => { setAllWorkers(res.data); setIsLoading(false) })\r\n            .catch(e => { console.log(e); setIsLoading(false); setErrorMsg(e) })\r\n    };\r\n    useEffect(() => {\r\n        if (showEditWorker) getWorkers();\r\n    }, [showEditWorker]);\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.workerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.workerText]);\r\n\r\n    const setWorker = val => {\r\n        setWorkerCurrentEmail(val);\r\n        const actualWorker = allWorkers.find(elem => elem.email === val);\r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = actualWorker[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        copyControls['password'].valid = false;\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const submitHandler = () => {       \r\n        if (props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker(\r\n            {\r\n                id: workerCurrentEmail,\r\n                newData: {\r\n                    name: controls.name.value.trim(),\r\n                    lastName: controls.lastName.value.trim(),\r\n                    email: controls.email.value.trim(),\r\n                    password: controls.password.value.trim(),\r\n                }\r\n            }\r\n        );\r\n        worker.updateWorker(setSuccesMsg, setErrorMsg, setIsLoading, getWorkers);\r\n    };\r\n    const deleteHandler = () => {        \r\n        if (props.demo) { props.demoModal(true); return; }\r\n        const worker = new Worker({\r\n            id: controls.email.value.trim()\r\n        });\r\n        confirm({\r\n            title: controls.name.value + ' ' + controls.lastName.value,\r\n            content: props.workerText.deleteConfirm,\r\n            onOk() {\r\n                worker.deleteWorker(setSuccesMsg, setErrorMsg, setIsLoading, getWorkers);\r\n            },\r\n            onCancel() { return }\r\n        });        \r\n    };\r\n    const cancelHandler = () => {        \r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditWorker(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    if (allWorkers.length) {\r\n        options = allWorkers.map(worker => {\r\n            return <Option value={worker.email} key={worker.email}>\r\n                {worker.lastName + ' ' + worker.name}\r\n            </Option>\r\n        })\r\n    };\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.workerText.editPanelName}</h6>\r\n            <p>{props.workerText.restrictionText}</p>\r\n            <p>{props.workerText.choiceWorker}</p>\r\n            <Select\r\n                style={{ width: \"100%\" }}\r\n                onChange={(value) => setWorker(value)}\r\n                defaultValue={props.textMenu.workers}>\r\n                {options}\r\n            </Select>\r\n            <form  style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}       \r\n                <Button\r\n                    onClick={submitHandler}\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                >\r\n                    {props.workerText ? props.workerText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type=\"danger\"\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={deleteHandler}\r\n                >\r\n                    {props.workerText ? props.workerText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditWorker}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allWorkers.length ? <h6 style={{ margin: 20, color: 'rgba(43, 144, 143, 0.85)' }}>{props.workerText.noWorkers}</h6> :\r\n                    successMsg ?\r\n                        <div style={{ margin: 20, textAlign: 'center' }}>\r\n                            <h5 style={{ color: 'rgba(43, 144, 143, 0.85)' }}>\r\n                                {props.workerText.editWorkerSuccess}</h5>\r\n                            <h6>{successMsg === 1 ?\r\n                                controls.name.value + ' ' + controls.lastName.value :\r\n                                successMsg}</h6>\r\n                        </div> :\r\n                        errorMsg ?\r\n                            <div style={{ margin: '1.5rem' }}>\r\n                                <h6 style={{ color: 'red' }}>{\r\n                                    props.errorText[errorMsg] ?\r\n                                        props.errorText[errorMsg] :\r\n                                        props.workerText.addWorkerError\r\n                                }</h6>\r\n                            </div> :\r\n                            isLoading ? <Spinner /> :\r\n                                formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.workerText ? props.workerText.cancel : ''}\r\n            </Button>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        workerText: state.initLang.textOwner.workerForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditWorker)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport AppContext from '../../../context/app-context';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, checkIdentity, changeInputsFormText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Button, Modal } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport * as actions from '../../../store/actions';\r\nimport _ from 'lodash';\r\nconst { confirm } = Modal;\r\n\r\nconst EditCompany = props => {\r\n\r\n    const [controls, setControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',                \r\n                placeholder: props.registerText.name\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.lastName\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 20\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        company: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.company\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        nip: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.nip\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 20\r\n                \r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.street\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 40\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        city: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.city\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        post: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.post\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 10\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: props.registerText.country\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 2,\r\n                maxLength: 30\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.registerText.email\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: props.registerText.email2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true                \r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.registerText.password3\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password2: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: props.registerText.password2\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 50\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { showEditCompany, setShowEditCompany} = useContext(MenuContext);\r\n    const { setShowOwner } = useContext(AppContext);   \r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [notIdentity, setNotIdentity] = useState(null);\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n        formElementsKeyArray.push(key);\r\n    };\r\n\r\n    const getCompany = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/api/users/findUser')\r\n            .then(res => { setWorker(res.data); setIsLoading(false) })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e.response.data) })\r\n    };\r\n    useEffect(() => {\r\n        if(showEditCompany) getCompany();\r\n        // eslint-disable-next-line\r\n    }, [showEditCompany]);\r\n\r\n    useEffect(() => {\r\n        validFormHandler(controls, setFormIsValid);\r\n        if(notIdentity) setNotIdentity(null)\r\n        // eslint-disable-next-line\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsFormText(controls, formElementsKeyArray, props.registerText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.registerText]);\r\n\r\n    const setWorker = val => {        \r\n        const copyControls = _.cloneDeep(controls);\r\n        formElementsKeyArray.forEach(elem => {\r\n            copyControls[elem].value = val[elem];\r\n            copyControls[elem].valid = true;\r\n            copyControls[elem].touched = true;\r\n        });\r\n        copyControls['password'].valid = false;\r\n        copyControls['password2'].valid = false;\r\n        setControls(copyControls);\r\n    };\r\n\r\n    const checkIdentityHandler = () => {        \r\n        if(!checkIdentity(controls.email.value, controls.email2.value)) {\r\n            setFormIsValid(false);\r\n            setNotIdentity('email');\r\n            return;\r\n        }\r\n        else {\r\n            if(!checkIdentity(controls.password.value, controls.password2.value)) {\r\n                setFormIsValid(false);\r\n                setNotIdentity('password');\r\n                return;\r\n            }\r\n        };\r\n        submitHandler()\r\n    };\r\n\r\n    const submitHandler = () => {       \r\n        if(props.demo) { props.demoModal(true); return; }\r\n        const data = {\r\n            dataSet : {\r\n                name: controls.name.value,\r\n                lastName: controls.lastName.value,\r\n                company: controls.company.value,\r\n                nip: controls.nip.value,\r\n                street: controls.street.value,\r\n                city: controls.city.value,\r\n                post: controls.post.value,\r\n                country: controls.country.value,\r\n                email: controls.email.value,\r\n                password: controls.password.value                \r\n            }\r\n        };\r\n        setIsLoading(true);\r\n        Axios.put('api/users', data)\r\n        .then(res => {\r\n            if(res.status === 200) {\r\n                setSuccesMsg(true);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch(e => {\r\n            setErrorMsg(e.response.data.toString());\r\n            setIsLoading(false);\r\n        })\r\n    };\r\n    const deleteHandler = () => {        \r\n        if(props.demo) { props.demoModal(true); return }\r\n        confirm({\r\n            title: controls.company.value,\r\n            content: props.cText.deleteConfirm,\r\n            onOk() {\r\n                setIsLoading(true);\r\n                Axios.delete('api/users')\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        setShowOwner(false);\r\n                        props.onLogout();\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    setErrorMsg(e.response.data.toString());\r\n                    setIsLoading(false);\r\n                })\r\n            },\r\n            onCancel() { return }\r\n        });        \r\n    };\r\n    const cancelHandler = () => {        \r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowEditCompany(false);\r\n        setSuccesMsg(null);\r\n        setErrorMsg(null);\r\n        setIsLoading(true);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            label={formElement.config.label}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, controls, formElement.id, setControls)}\r\n        />\r\n    ));\r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.cText.panelName}</h6>\r\n            <p>{props.restrictionText}</p>\r\n            <form  style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <p style={{color: 'red'}}>{\r\n                    notIdentity === 'email' ?\r\n                    props.registerText.emailNotIdentity :\r\n                    notIdentity === 'password' ?\r\n                    props.registerText.passwordNotIdentity :\r\n                    null\r\n                }</p>\r\n                <Button\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    onClick={ checkIdentityHandler }\r\n                >\r\n                        {props.cText ? props.cText.submitChange : ''}\r\n                </Button>\r\n                <Button\r\n                    type=\"danger\"\r\n                    disabled={!formIsValid || isLoading || !props.perm}\r\n                    style={{ margin: '1rem' }}\r\n                    onClick={ deleteHandler }\r\n                >\r\n                    {props.cText ? props.cText.delete : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n    return (\r\n        <Drawer\r\n            visible={showEditCompany}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {                   \r\n                successMsg ?\r\n                    <div style={{ margin: 20, textAlign: 'center' }}>\r\n                        <h5 style={{color: 'rgba(43, 144, 143, 0.85)'}}>\r\n                        {props.cText.editCompanySuccess}</h5>                       \r\n                    </div> :\r\n                    errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.cText.addWorkerError\r\n                            }</h6>\r\n                        </div> :\r\n                        isLoading ? <Spinner /> :\r\n                            formElement\r\n            }\r\n            <Button onClick={cancelHandler}>\r\n                {props.cText ? props.cText.cancel : ''}\r\n            </Button> \r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        cText: state.initLang.textOwner.companyEdit,\r\n        registerText: state.initLang.textHome.registerForm,\r\n        textMenu: state.initLang.textOwner.userMenu,\r\n        restrictionText: state.initLang.textOwner.workerForm.restrictionText,\r\n        perm: state.authReducer.perm,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logoutUser())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCompany)","import React, {useEffect, useState, useContext} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport { Drawer, Table, Switch } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst Payments = props => {\r\n\r\n    const { showPayments, setShowPayments} = useContext(MenuContext);\r\n    const [allTrucks, setAllTrucks] = useState([]);\r\n    const [data, setData] = useState([]);   \r\n    const [toCheck, setToCheck] = useState({});\r\n    const [totalBasket, setTotalBasket] = useState(0);    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const deadLine = Number(Date.now()) + 999900000;\r\n\r\n    const columns = [\r\n\t\t{\r\n\t\t\ttitle: props.payText.registration,\r\n            dataIndex: 'registration',\r\n            render: text => <h6 \r\n                style={{color: '#1890ff'}}>\r\n                {text}\r\n            </h6>\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.paidTo,\r\n            dataIndex: 'paidTo',\r\n            render: text => {\r\n                let textColor;\r\n                text < deadLine ? textColor='red' : textColor='#1890ff';\r\n                text = (new Date(text)).toLocaleDateString()\r\n                return <h6 style={{color: textColor}}>{text}</h6>}\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy4M,\r\n\t\t\tdataIndex: 'buy4M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy8M,\r\n\t\t\tdataIndex: 'buy8M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.buy12M,\r\n\t\t\tdataIndex: 'buy12M'\r\n        },\r\n        {\r\n\t\t\ttitle: props.payText.basket,\r\n            dataIndex: 'basket',\r\n            render: text => <h6 \r\n                style={{color: '#1890ff'}}>\r\n                {text ? text + props.payText.currency: null}\r\n            </h6>\r\n\t\t}\r\n    ]\r\n\r\n    const getPayments = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/system/allTrucks')\r\n            .then(res => { setAllTrucks(res.data); setIsLoading(false) })\r\n            .catch(e => {setIsLoading(false); setErrorMsg(e.response.data.toString()) })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(showPayments) getPayments();\r\n        // eslint-disable-next-line\r\n    }, [showPayments]);\r\n\r\n    useEffect(() => {\r\n        if(allTrucks.length) {\r\n            const tempToCheck = {};\r\n            allTrucks.forEach(elem => tempToCheck[elem._id] = {id: null, value: null});           \r\n            setToCheck(tempToCheck)\r\n        }\r\n    },[allTrucks]);\r\n\r\n    useEffect(() => {\r\n        if(allTrucks.length) {\r\n            setData(\r\n                allTrucks.map(elem => { \r\n                    return {\r\n                        registration: elem._id,\r\n                        paidTo: elem.paid,\r\n                        \r\n                        buy4M: <Switch name={elem._id} value={48} id={elem._id + '_122'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_122'}\r\n                        />,\r\n                        \r\n                        buy8M: <Switch name={elem._id} value={80} id={elem._id + '_244'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_244'}\r\n                        />,\r\n                        \r\n                        buy12M: <Switch name={elem._id} value={96} id={elem._id + '_365'}\r\n                        onChange={(checked, event) => switchHandler(checked, event.target)}\r\n                        checked={toCheck[elem._id].id === elem._id + '_365'}\r\n                        />,\r\n                        basket: toCheck[elem._id].value,\r\n                        key: elem._id\r\n                    }\r\n                })\r\n            );\r\n        } // eslint-disable-next-line\r\n    },[toCheck]);\r\n\r\n    const switchHandler = (checked, e) => {      \r\n        const copy = _.cloneDeep(toCheck)       \r\n        if(checked) {\r\n            copy[e.name].id = e.id;\r\n            copy[e.name].value = e.value;\r\n        }\r\n        else {\r\n            copy[e.name].id = null;\r\n            copy[e.name].value = null;\r\n        }       \r\n        setToCheck(copy);\r\n        checkTotal(copy);\r\n    };\r\n\r\n    const checkTotal = (copy) => {\r\n        let total = 0;\r\n        for(let key in copy) {            \r\n            total += Number(copy[key].value ? copy[key].value : '0')\r\n        }        \r\n        setTotalBasket(total);\r\n    };\r\n\r\n    const payHandler = ()  => {\r\n        //DotPay connection\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setTotalBasket(0);\r\n        setShowPayments(false)\r\n    }\r\n    \r\n    return(\r\n        <Drawer\r\n            visible={showPayments}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            height='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        > {\r\n            isLoading ? <Spinner /> :\r\n            errorMsg ?\r\n                    <div style={{margin: '1.5rem'}}>\r\n                            <h6 style={{color: 'red'}}>{\r\n                                props.errorText[errorMsg] ? \r\n                                props.errorText[errorMsg] : \r\n                                props.cText.addWorkerError\r\n                            }</h6>\r\n                    </div> :                     \r\n\r\n            <div style={{width: '90%', margin: '1rem auto'}}>\r\n                <h4 style={{color: 'rgba(43, 144, 143, 0.85)', margin: 20}} >\r\n                    {props.payText.title}\r\n                </h4>\r\n                <h6>\r\n                    {props.payText.infoHeader}\r\n                </h6>\r\n                <p style={{padding: 40}}>\r\n                    {props.payText.info}\r\n                </p>\r\n                <Table \r\n                    columns={columns}\r\n                    dataSource={data}\r\n                    bordered\r\n                    size='middle'\r\n                    width='80%'\r\n                    pagination={{ pageSize: 20 }}                   \r\n                    footer={() => {\r\n                        const vat = Number( (totalBasket * props.payText.vatRate).toFixed(2));\r\n                        const gross = vat + totalBasket\r\n                        return (\r\n                            !totalBasket ? null :\r\n                            <h6 style={{textAlign: 'right', padding: '0 20px'}}>{\r\n                                `${props.payText.total} ${totalBasket} ${props.payText.currency}\r\n                                 + ${vat} ${props.payText.vat} = ${gross} ${props.payText.currency}`}\r\n                            </h6>\r\n                        )\r\n                    }}\r\n                />\r\n                <p style={{padding: '20px 40px'}}>\r\n                    {props.payText.acceptPayment}\r\n                </p>               \r\n            </div>\r\n        }\r\n            <button\r\n                onClick={payHandler}\r\n                disabled\r\n                hidden={errorMsg}\r\n                style={{marginRight: 30}}\r\n                className='btn btn-primary btn-sm'>\r\n                {props.payText ? props.payText.payButton : ''}\r\n            </button>\r\n            <button\r\n                onClick={cancelHandler}\r\n                className='btn btn-secondary btn-sm'>\r\n                {props.payText ? props.payText.cancel : ''}\r\n            </button>\r\n        </Drawer>        \r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        payText: state.initLang.textOwner.companyPayment\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Payments);","import React, { useContext, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport InstructionPhone from '../../../assets/img/instructionPhone.jpg';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst PhoneInstruction = props => {\r\n\r\n    const [_gcn] = useState(Cookies.get('_gcn'))\r\n    const {showPhoneInstruction, setShowPhoneInstruction } = useContext(MenuContext);\r\n    let url = `https://driver.${window.location.host}/driver/`;\r\n    \r\n    return (\r\n        <Modal\r\n        visible={showPhoneInstruction}\r\n        title={props.instrText.title}\r\n        width='50vw'\r\n        onCancel={() => setShowPhoneInstruction(false)}\r\n        footer={[\r\n            <Button key=\"back\" onClick={() => setShowPhoneInstruction(false)}>\r\n                OK\r\n            </Button>            \r\n        ]}\r\n    >\r\n        <p>{props.instrText.p1}</p>\r\n        <p>{props.instrText.p2 +  url + _gcn + '/' + props.lang}</p>\r\n        <p>{props.instrText.p3}</p>\r\n        <p>{props.instrText.p4}</p>\r\n        <p>{props.instrText.p5}</p>\r\n        <img style={{margin: '20px 100px'}} src={InstructionPhone} alt='instructionPhone' />\r\n        <p>{props.instrText.p6}</p>\r\n        <p>{props.instrText.p7}</p>\r\n        \r\n    </Modal>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instrText: state.initLang.textOwner.phoneInstruction,\r\n        lang: state.initLang.language\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(PhoneInstruction);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport AppContext from '../../../context/app-context';\r\nimport ChartsContext from '../../../context/charts-context';\r\nimport { inputChangedHandler, validFormHandler, cancelForm, changeInputsLabelText } from '../../../shared/utility';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport { Drawer, Select, Button, DatePicker } from 'antd';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nconst { Option } = Select;\r\n\r\nconst ManualRoutes = props => {\r\n    const [action, setAction] = useState(0);\r\n\r\n    const {setShowOwner} = useContext(AppContext);\r\n\r\n    const kmStop = {\r\n        elementType: 'input',\r\n        label: props.manualText.kmStop,\r\n        elementConfig: {\r\n            type: 'number'\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 7\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const tonOut = {\r\n        elementType: 'input',\r\n        label: props.manualText.tonOut,\r\n        elementConfig: {\r\n            type: 'number',\r\n            min: 0\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 2\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const tonIn = {\r\n        elementType: 'input',\r\n        label: props.manualText.tonIn,\r\n        elementConfig: {\r\n            type: 'number',\r\n            min: 0\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 2\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const weight = {\r\n        elementType: 'input',\r\n        label: props.manualText.weight,\r\n        elementConfig: {\r\n            type: 'number',\r\n            min: 0\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 2\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const country = {\r\n        elementType: 'input',\r\n        label: props.manualText.country,\r\n        elementConfig: {\r\n            type: 'text'\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 20\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const postal = {\r\n        elementType: 'input',\r\n        label: props.manualText.postal,\r\n        elementConfig: {\r\n            type: 'text'\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 3,\r\n            maxLength: 10\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const litres = {\r\n        elementType: 'input',\r\n        label: props.manualText.litres,\r\n        elementConfig: {\r\n            type: 'number',\r\n            min: 1\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 1,\r\n            maxLength: 4\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    };\r\n    const full = {\r\n        elementType: 'select',\r\n        label: props.manualText.full,\r\n        elementConfig: {\r\n            options: [\r\n                { value: null, displayValue: '' },\r\n                { value: 0, displayValue: props.manualText.no },\r\n                { value: 1, displayValue: props.manualText.yes },\r\n            ]\r\n        },\r\n        value: null,\r\n        valid: false,\r\n        validation: {\r\n            required: true,\r\n            minLength: 1\r\n        }\r\n    };\r\n    const fullFirst = {\r\n        elementType: 'select',\r\n        label: props.manualText.fullFirst,\r\n        elementConfig: {\r\n            options: [\r\n                { value: null, displayValue: '' },\r\n                { value: 1, displayValue: props.manualText.yes },\r\n            ]\r\n        },\r\n        value: null,\r\n        valid: false,\r\n        validation: {\r\n            required: true,\r\n            minLength: 1\r\n        }\r\n    };\r\n\r\n    const [controls, setControls] = useState(null);\r\n    const { showManualRoutes, setShowManualRoutes } = useContext(MenuContext);\r\n    const {allActiveTrucks} = useContext(ChartsContext);\r\n    const [_gcn] = useState(Cookies.get('_gcn'));\r\n    const [lastRouteLength, setLastRouteLength] = useState(0);\r\n    const [allTrucks, setAllTrucks] = useState([]);\r\n    const [activeTruck, setActiveTruck] = useState(null);\r\n    const [allDrivers, setAllDrivers] = useState([]);\r\n    const [activeDriver, setActiveDriver] = useState(null);\r\n    const [date, setDate] = useState(null);\r\n    const [activeToRouteDelete, setActiveToRouteDelete] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [successMsg, setSuccesMsg] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    let trucksOptions = <Option></Option>;\r\n    let driversOptions = <Option></Option>;\r\n    let trucksForRouteDelete = <Option></Option>;\r\n    const formElementsArray = [];\r\n    const formElementsKeyArray = [];\r\n\r\n    if (controls) {\r\n        for (let key in controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: controls[key]\r\n            });\r\n            formElementsKeyArray.push(key);\r\n        };\r\n    };\r\n\r\n    const getData = () => {\r\n        setIsLoading(true);\r\n        Axios.get('/system/allTrucks')\r\n            .then(res => {\r\n                setAllTrucks(res.data);                \r\n                Axios.get('/system/allDrivers')\r\n                    .then(res => { setAllDrivers(res.data); setIsLoading(false) })\r\n                    .catch(e => { setIsLoading(false); setErrorMsg(e) })\r\n            })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e) })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showManualRoutes) getData();\r\n    }, [showManualRoutes]);\r\n\r\n    useEffect(() => {\r\n        if (controls) validFormHandler(controls, setFormIsValid);\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        changeInputsLabelText(controls, formElementsKeyArray, props.manualText, setControls)\r\n        // eslint-disable-next-line\r\n    }, [props.manualText]);\r\n\r\n    const submitHandler = () => {\r\n        if (props.demo) { props.demoModal(true); return; }\r\n        let weightToOut = -1;\r\n        let fullOut = 0;\r\n        if(Number(action) === 3 && !lastRouteLength) weightToOut = Number(controls.weight.value);\r\n        if(Number(action) === 2 ) weightToOut = Number(controls.tonIn.value);\r\n        if(Number(action) === 1 ) weightToOut = Number(controls.tonOut.value);\r\n        \r\n        if(Number(action) === 3 && !lastRouteLength) fullOut = Number(controls.fullFirst.value);\r\n        if(Number(action) === 3 && lastRouteLength) fullOut = Number(controls.full.value);\r\n\r\n        const dataSet = {\r\n            add: 1,\r\n            country: controls.country.value,\r\n            driverId: activeDriver,\r\n            dtStop: date,\r\n            fuel_Id: Number(action) === 3 ? -1 : 0,\r\n            full: fullOut,\r\n            kmStop: Number(controls.kmStop.value),\r\n            litres: Number(action) === 3 ? Number(controls.litres.value) : 0,\r\n            postal: controls.postal.value,\r\n            tonOut:  weightToOut,\r\n            truckId: activeTruck,\r\n            type: Number(action),\r\n            _csrf: props._csrf,\r\n            _id: lastRouteLength\r\n        };\r\n        Axios.post('/system/owner/' + _gcn, dataSet)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setSuccesMsg(props.manualText.addRouteSuccess);\r\n                setShowOwner(false);\r\n                setShowOwner(true);\r\n            })\r\n            .catch(e => { setIsLoading(false); setErrorMsg(e.response.data.toString()) })\r\n        console.log(dataSet)\r\n    };\r\n\r\n    const deleteHandler = () => {\r\n        if (props.demo) { props.demoModal(true); return; }  \r\n        Axios.delete('/system/owner/delRoute', {data: { _id: activeToRouteDelete }})\r\n        .then(res => {\r\n            setSuccesMsg(props.manualText.deleteRouteSuccess);\r\n            setShowOwner(false);\r\n            setShowOwner(true);\r\n        })\r\n        .catch(e => setErrorMsg(e.response.data));\r\n       \r\n    };\r\n    const cancelHandler = () => {\r\n        cancelForm(controls, formElementsKeyArray, setControls);\r\n        setShowManualRoutes(false);\r\n        setSuccesMsg(null);\r\n        setIsLoading(true);\r\n        setControls(null);\r\n        setAction(0);\r\n        setActiveDriver(null);\r\n        setActiveTruck(null);\r\n        setActiveToRouteDelete(null);\r\n        clearSelect()\r\n    };\r\n    const clearSelect = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 10)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeTruck && activeDriver && date) {\r\n            if (action === 1) setControls({ kmStop, tonOut, postal, country })\r\n            if (action === 2) setControls({ kmStop, tonIn, postal, country })\r\n            if (action === 3 && lastRouteLength) setControls({ kmStop, litres, full, postal, country })\r\n            if (action === 3 && !lastRouteLength) setControls({ kmStop, litres, fullFirst, weight, postal, country })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [action]);\r\n\r\n\r\n    const setFormElements = () => {\r\n        const input = formElementsArray.map(formElement => {\r\n            return <Input\r\n                key={formElement.id}\r\n                label={formElement.config.label}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => {\r\n                    inputChangedHandler(event, controls, formElement.id, setControls)\r\n                }\r\n                }\r\n            />\r\n        });\r\n        return input\r\n    };\r\n\r\n    let form = setFormElements();\r\n\r\n    if (allTrucks.length) {\r\n        trucksOptions = allTrucks.map(truck => {\r\n            return <Option value={truck._id} key={truck._id}>\r\n                {truck._id}\r\n            </Option>\r\n        })\r\n    };\r\n\r\n    if (allDrivers.length) {\r\n        driversOptions = allDrivers.map(driver => {\r\n            return <Option value={driver._id} key={driver._id}>\r\n                {driver.lastName + ' ' + driver.name}\r\n            </Option>\r\n        })\r\n    };    \r\n\r\n    const formElement = (\r\n        <>\r\n            <h6>{props.manualText.title}</h6>\r\n            <Select\r\n                style={{ width: '100%', margin: '15px 0' }}\r\n                onChange={value => {\r\n                    setActiveTruck(value);\r\n                    allTrucks.forEach(truck => {\r\n                        if (truck._id === value) setLastRouteLength(truck.routesLength);\r\n                    })\r\n                }}\r\n                defaultValue={props.manualText.choiceTruck}>\r\n                {trucksOptions}\r\n            </Select>\r\n            <br></br>\r\n            <Select\r\n                style={{ width: '100%', margin: '15px 0' }}\r\n                onChange={value => setActiveDriver(value)}\r\n                defaultValue={props.manualText.choiceDriver}>\r\n                {driversOptions}\r\n            </Select>\r\n            <br></br>\r\n            <DatePicker\r\n                style={{ width: '100%', marginTop: 15 }}\r\n                allowClear={false}\r\n                onChange={date => setDate((date._d).getTime())} />\r\n            <br></br>\r\n            <Select\r\n                disabled={activeTruck === null || activeDriver === null || date === null}\r\n                style={{ width: '100%', margin: '15px 0' }}\r\n                onChange={value => setAction(value)}\r\n                defaultValue={props.manualText.choiceAction}>\r\n                    <Option disabled={!lastRouteLength} value={1} key={1} >{props.manualText.load}</Option>\r\n                    <Option disabled={!lastRouteLength} value={2} key={2} >{props.manualText.unLoad}</Option>\r\n                    <Option value={3} key={3} >{props.manualText.fuel}</Option>\r\n            </Select>\r\n            <hr></hr>\r\n            <form style={{ display: \"inline\", textAlign: 'center' }}>\r\n                {form}\r\n                <Button\r\n                    disabled={!formIsValid || isLoading}\r\n                    onClick={submitHandler}\r\n                    style={{ margin: '1rem' }}\r\n                >\r\n                    {props.manualText ? props.manualText.submitChange : ''}\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n    if (allActiveTrucks.length) {\r\n        trucksForRouteDelete = allTrucks.map(truck => {\r\n            if(!truck.routesLength) return null;\r\n           return <Option value={truck._id} key={truck._id + \"X\"}>\r\n                {truck._id}\r\n            </Option>\r\n        })\r\n    };\r\n    const formRouteDelete = (\r\n        <>\r\n            <h6>{props.manualText.deleteTitle}</h6>\r\n            <Select\r\n                style={{ width: '100%', margin: '15px 0' }}\r\n                onChange={value => setActiveToRouteDelete(value)}\r\n                defaultValue={props.manualText.choiceTruck}>\r\n                {trucksForRouteDelete}\r\n            </Select>\r\n            <Button\r\n                type='danger'\r\n                disabled={isLoading || !activeToRouteDelete}\r\n                style={{ margin: '1rem' }}\r\n                onClick={deleteHandler}\r\n            >\r\n                {props.manualText ? props.manualText.deleteRoute : ''}\r\n            </Button>\r\n            <Button onClick={cancelHandler} >\r\n                {props.manualText ? props.manualText.cancel : ''}\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Drawer\r\n            visible={showManualRoutes}\r\n            placement=\"left\"\r\n            closable={false}\r\n            width='auto'\r\n            style={{ textAlign: 'center' }}\r\n            onClose={cancelHandler}\r\n        >\r\n            {\r\n                !allTrucks.length ?\r\n                    <h6 style={{ margin: 20, color: 'rgba(43, 144, 143, 0.85)' }}>\r\n                        {props.manualText.noTrucks}\r\n                    </h6> :\r\n                    successMsg ?\r\n                        <div style={{ margin: 20, textAlign: 'center' }}>\r\n                            <h5 style={{ color: 'rgba(43, 144, 143, 0.85)' }}>\r\n                                {successMsg}</h5>                            \r\n                        </div> :\r\n                        errorMsg ?\r\n                            <div style={{ margin: '1.5rem' }}>\r\n                                <h6 style={{ color: 'red' }}>{\r\n                                    props.errorText[errorMsg] ?\r\n                                        props.errorText[errorMsg] :\r\n                                        props.manualText.addRouteError\r\n                                }</h6>\r\n                            </div> :\r\n                            isLoading ? <Spinner /> :\r\n                                formElement\r\n            }\r\n            <Button onClick={cancelHandler} >\r\n                {props.manualText ? props.manualText.cancel : ''}\r\n            </Button>\r\n            \r\n            <hr></hr>\r\n            {errorMsg || successMsg ?  null : formRouteDelete}\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errorText: state.initLang.textHome.serverResErrors,\r\n        manualText: state.initLang.textOwner.manualRoutes,\r\n        _csrf: state.initLang._csrf,\r\n        demo: state.authReducer.demo\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(ManualRoutes)","import React, {useState, useEffect, useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport MenuContext from '../../../context/menu-context';\r\nimport NavForBigDevices from '../../Nav/NavForBigDevices/NavForBigDevices';\r\nimport Menu from '../Menu/Menu';\r\nimport Inside from '../Inside/Inside';\r\nimport AddDriver from '../../../Containers/Owner/Drivers/AddDriver';\r\nimport AddTruck from '../../../Containers/Owner/Trucks/AddTruck';\r\nimport EditTruck from '../../../Containers/Owner/Trucks/EditTruck';\r\nimport Theft from '../../../Containers/Owner/Trucks/Theft';\r\nimport AddWorker from '../../../Containers/Owner/Workers/AddWorker';\r\nimport EditWorker from '../../../Containers/Owner/Workers/EditWorker';\r\nimport EditCompany from '../../../Containers/Owner/Company/EditCompany';\r\nimport Payments from '../../../Containers/Owner/Company/Payments';\r\nimport PhoneInstruction from '../../../Components/Owner/Instructions/PhoneInstruction';\r\nimport ManualRoutes from '../../../Containers/Owner/ManualRoutes/ManualRoutes';\r\nimport AppContext from '../../../context/app-context';\r\nimport {Modal} from 'antd';\r\nimport classes from './OwnerLayout.css';\r\n\r\nconst EditDriver = React.lazy(() => import('../../../Containers/Owner/Drivers/EditDriver'));\r\n\r\nconst OwnerLayout = props => {\r\n    \r\n    const { setShowOwner } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n       if(!props.token) {\r\n        setShowOwner(false);\r\n        props.onLogout();\r\n       } // eslint-disable-next-line\r\n    }, [props.token]);\r\n\r\n    const [showAddDriver, setShowAddDriver] = useState(false);\r\n    const [showEditDriver, setShowEditDriver] = useState(false);\r\n    const setAddDriver = val => setShowAddDriver(val);\r\n    const setEditDriver = val => setShowEditDriver(val);\r\n\r\n    const [showAddTruck, setShowAddTruck] = useState(false);\r\n    const [showEditTruck, setShowEditTruck] = useState(false);\r\n    const [showTheft, setShowTheft] = useState(false);\r\n    const setAddTruck = val => setShowAddTruck(val);\r\n    const setEditTruck = val => setShowEditTruck(val);\r\n    const setTheft = val => setShowTheft(val);\r\n\r\n    const [showAddWorker, setShowAddWorker] = useState(false);\r\n    const [showEditWorker, setShowEditWorker] = useState(false);\r\n    const setAddWorker = val => setShowAddWorker(val);\r\n    const setEditWorker = val => setShowEditWorker(val);\r\n\r\n    const [showEditCompany, setShowEditCompany] = useState(false);\r\n    const setEditCompany = val => setShowEditCompany(val);\r\n\r\n    const [showPayments, setShowPayments] = useState(false);\r\n    const setPayments = val => setShowPayments(val);\r\n\r\n    const [showPhoneInstruction, setShowPhoneInstruction] = useState(false);\r\n    const setPhoneInstruction = val => setShowPhoneInstruction(val);\r\n\r\n    const [showManualRoutes, setShowManualRoutes] = useState(false);\r\n    const setManualRoutes = val => setShowManualRoutes(val);\r\n\r\n    const [showDemoModal, setShowDemoModal] = useState(false);\r\n\r\n    return (\r\n        <MenuContext.Provider value ={{\r\n            showAddDriver,\r\n            setShowAddDriver: setAddDriver,\r\n            showEditDriver,\r\n            setShowEditDriver: setEditDriver,\r\n            showAddTruck,\r\n            setShowAddTruck: setAddTruck,\r\n            showEditTruck,\r\n            setShowEditTruck: setEditTruck,\r\n            showTheft,\r\n            setShowTheft: setTheft,\r\n            showAddWorker,\r\n            setShowAddWorker:setAddWorker,\r\n            showEditWorker,\r\n            setShowEditWorker: setEditWorker,\r\n            showEditCompany,\r\n            setShowEditCompany: setEditCompany,\r\n            showPayments,\r\n            setShowPayments:setPayments,\r\n            showPhoneInstruction,\r\n            setShowPhoneInstruction: setPhoneInstruction,\r\n            showManualRoutes,\r\n            setShowManualRoutes: setManualRoutes\r\n            }}>\r\n            <div>\r\n                <NavForBigDevices />\r\n                <div className={classes.Container}>\r\n                    <Menu />\r\n                    <Inside />\r\n                </div>                       \r\n            </div>\r\n            <Modal\r\n                visible={showDemoModal}\r\n                closable={false}\r\n                zIndex={2000}\r\n                cancelButtonProps={{disabled: true}}\r\n                onOk={() => setShowDemoModal(false)}\r\n                >\r\n                {props.demoText}\r\n            </Modal>\r\n            <AddDriver demoModal={setShowDemoModal} />\r\n            <EditDriver demoModal={setShowDemoModal} />\r\n            <AddTruck demoModal={setShowDemoModal} />\r\n            <EditTruck demoModal={setShowDemoModal} />\r\n            <Theft demoModal={setShowDemoModal} />\r\n            <AddWorker demoModal={setShowDemoModal} />\r\n            <EditWorker demoModal={setShowDemoModal} />\r\n            <EditCompany demoModal={setShowDemoModal} />\r\n            <Payments />\r\n            <PhoneInstruction />\r\n            <ManualRoutes demoModal={setShowDemoModal} />\r\n        </MenuContext.Provider>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.authReducer.token,\r\n        demoText: state.initLang.textOwner.userMenu.demo\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logoutUser())\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnerLayout);\r\n"],"sourceRoot":""}